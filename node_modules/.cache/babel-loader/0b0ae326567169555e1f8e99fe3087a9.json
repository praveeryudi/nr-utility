{"ast":null,"code":"var _jsxFileName = \"F:\\\\MicroserviceApp\\\\spring-boot-react\\\\src\\\\main\\\\nr-utility\\\\src\\\\components\\\\EmployeesList.js\";\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchAllEmployees, fetchEmployeeJobHistory } from '../actions/employeeActions';\nimport MUIDataTable from \"mui-datatables\";\nimport CustomFooter from \"./CustomFooter\";\n\nconst EmployeesList = props => {\n  const len = props.employees.length;\n  useEffect(() => {\n    props.fetchEmployees();\n  }, [len]);\n  const data = props.employees;\n  const columns = [{\n    name: \"employeeId\",\n    label: \"Id\",\n    options: {\n      filter: true,\n      sort: true,\n      customBodyRender: value => {\n        return React.createElement(\"a\", {\n          href: props.fetchJobHistory(value),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25\n          },\n          __self: this\n        }, value);\n      }\n    }\n  }, {\n    name: \"firstName\",\n    label: \"First Name\",\n    options: {\n      filter: true,\n      sort: true\n    }\n  }, {\n    name: \"lastName\",\n    label: \"Last Name\",\n    options: {\n      filter: true,\n      sort: true\n    }\n  }, {\n    name: \"email\",\n    label: \"Email\",\n    options: {\n      filter: true,\n      sort: false\n    }\n  }, {\n    name: \"phoneNumber\",\n    label: \"Phone\",\n    options: {\n      filter: true,\n      sort: false\n    }\n  }, {\n    name: \"hireDate\",\n    label: \"Hire Date\",\n    options: {\n      filter: false,\n      sort: true\n    }\n  }, {\n    name: \"jobId\",\n    label: \"Job Id\",\n    options: {\n      filter: true,\n      sort: false\n    }\n  }, {\n    name: \"salary\",\n    label: \"Salary\",\n    options: {\n      filter: false,\n      sort: true\n    }\n  }, {\n    name: \"commissionPct\",\n    label: \"Commission\",\n    options: {\n      filter: true,\n      sort: true\n    }\n  }, {\n    name: \"managerId\",\n    label: \"Manager Id\",\n    options: {\n      filter: true,\n      sort: false\n    }\n  }, {\n    name: \"departmentId\",\n    label: \"Department Id\",\n    options: {\n      filter: true,\n      sort: false\n    }\n  }];\n  const options = {\n    filter: true,\n    filterType: 'dropdown',\n    responsive: 'scrollMaxHeight',\n    rowsPerPage: 10,\n    selectableRows: 'none',\n    fixedHeaderOptions: {\n      xAxis: false,\n      yAxis: true\n    }\n  };\n  return React.createElement(MUIDataTable, {\n    title: \"Employee List\",\n    data: data,\n    columns: columns,\n    options: options,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  });\n};\n\nconst mapStateToProps = state => ({\n  employees: state.empReducer.employees\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchEmployees: () => dispatch(fetchAllEmployees()),\n  fetchJobHistory: employeeId => dispatch(fetchEmployeeJobHistory(employeeId))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EmployeesList);","map":{"version":3,"sources":["F:/MicroserviceApp/spring-boot-react/src/main/nr-utility/src/components/EmployeesList.js"],"names":["React","useEffect","connect","fetchAllEmployees","fetchEmployeeJobHistory","MUIDataTable","CustomFooter","EmployeesList","props","len","employees","length","fetchEmployees","data","columns","name","label","options","filter","sort","customBodyRender","value","fetchJobHistory","filterType","responsive","rowsPerPage","selectableRows","fixedHeaderOptions","xAxis","yAxis","mapStateToProps","state","empReducer","mapDispatchToProps","dispatch","employeeId"],"mappings":"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","sourcesContent":["import React, {useEffect} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {fetchAllEmployees, fetchEmployeeJobHistory} from '../actions/employeeActions';\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport CustomFooter from \"./CustomFooter\";\r\n\r\nconst EmployeesList = (props) => {\r\n\r\n    const len = props.employees.length;\r\n\r\n    useEffect(() => {\r\n        props.fetchEmployees();\r\n    }, [len]);\r\n\r\n    const data = props.employees;\r\n    const columns = [\r\n        {\r\n            name: \"employeeId\",\r\n            label: \"Id\",\r\n            options: {\r\n                filter: true,\r\n                sort: true,\r\n                customBodyRender: (value) => {\r\n                    return (\r\n                      <a href={props.fetchJobHistory(value)}>{value}</a>\r\n                    );\r\n                  }\r\n            }\r\n        },\r\n        {\r\n            name: \"firstName\",\r\n            label: \"First Name\",\r\n            options: {\r\n                filter: true,\r\n                sort: true,\r\n            }\r\n        },\r\n        {\r\n            name: \"lastName\",\r\n            label: \"Last Name\",\r\n            options: {\r\n                filter: true,\r\n                sort: true,\r\n            }\r\n        },\r\n        {\r\n            name: \"email\",\r\n            label: \"Email\",\r\n            options: {\r\n                filter: true,\r\n                sort: false,\r\n            }\r\n        },\r\n        {\r\n            name: \"phoneNumber\",\r\n            label: \"Phone\",\r\n            options: {\r\n                filter: true,\r\n                sort: false,\r\n            }\r\n        },\r\n        {\r\n            name: \"hireDate\",\r\n            label: \"Hire Date\",\r\n            options: {\r\n                filter: false,\r\n                sort: true,\r\n            }\r\n        },\r\n        {\r\n            name: \"jobId\",\r\n            label: \"Job Id\",\r\n            options: {\r\n                filter: true,\r\n                sort: false,\r\n            }\r\n        },\r\n        {\r\n            name: \"salary\",\r\n            label: \"Salary\",\r\n            options: {\r\n                filter: false,\r\n                sort: true,\r\n            }\r\n        },\r\n        {\r\n            name: \"commissionPct\",\r\n            label: \"Commission\",\r\n            options: {\r\n                filter: true,\r\n                sort: true,\r\n            }\r\n        },\r\n        {\r\n            name: \"managerId\",\r\n            label: \"Manager Id\",\r\n            options: {\r\n                filter: true,\r\n                sort: false,\r\n            }\r\n        },\r\n        {\r\n            name: \"departmentId\",\r\n            label: \"Department Id\",\r\n            options: {\r\n                filter: true,\r\n                sort: false,\r\n            }\r\n        },\r\n    ];\r\n\r\n    const options = {\r\n        filter: true,\r\n        filterType: 'dropdown',\r\n        responsive: 'scrollMaxHeight',\r\n        rowsPerPage: 10,\r\n        selectableRows: 'none',\r\n        fixedHeaderOptions: {\r\n            xAxis: false,\r\n            yAxis: true\r\n        },\r\n    };\r\n\r\n    return (\r\n        <MUIDataTable\r\n            title={\"Employee List\"}\r\n            data={data}\r\n            columns={columns}\r\n            options={options}\r\n        />\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    employees: state.empReducer.employees,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    fetchEmployees: () => dispatch(fetchAllEmployees()),\r\n    fetchJobHistory: (employeeId) => dispatch(fetchEmployeeJobHistory(employeeId)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EmployeesList);"]},"metadata":{},"sourceType":"module"}