{"ast":null,"code":"var _jsxFileName = \"D:\\\\Personal Projects\\\\nr-utility\\\\src\\\\containers\\\\AddNewEmployeeForm.js\";\nimport React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport TextField from 'material-ui/TextField';\nimport { RadioButton, RadioButtonGroup } from 'material-ui/RadioButton';\nimport Checkbox from 'material-ui/Checkbox';\nimport SelectField from 'material-ui/SelectField';\nimport MenuItem from 'material-ui/MenuItem';\nimport asyncValidate from './asyncValidate';\n\nconst validate = values => {\n  const errors = {};\n  const requiredFields = ['firstName', 'lastName', 'email', 'favoriteColor', 'notes'];\n  requiredFields.forEach(field => {\n    if (!values[field]) {\n      errors[field] = 'Required';\n    }\n  });\n\n  if (values.email && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n    errors.email = 'Invalid email address';\n  }\n\n  return errors;\n};\n\nconst renderTextField = field => React.createElement(TextField, Object.assign({\n  hintText: field.input.label,\n  floatingLabelText: field.input.label,\n  errorText: field.touched && field.error\n}, field.input, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25\n  },\n  __self: this\n}));\n\nconst renderCheckbox = field => React.createElement(Checkbox, {\n  label: field.input.label,\n  checked: field.input.value ? true : false,\n  onCheck: field.input.onChange,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 33\n  },\n  __self: this\n});\n\nconst renderSelectField = field => React.createElement(SelectField, Object.assign({\n  floatingLabelText: field.input.label,\n  errorText: field.touched && field.error\n}, field.input, {\n  onChange: (event, index, value) => field.input.onChange(value),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 39\n  },\n  __self: this\n}));\n\nconst AddNewEmployeeForm = props => {\n  const handleSubmit = props.handleSubmit,\n        pristine = props.pristine,\n        reset = props.reset,\n        submitting = props.submitting;\n  return React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(Field, {\n    name: \"firstName\",\n    component: renderTextField,\n    label: \"First Name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(Field, {\n    name: \"lastName\",\n    component: renderTextField,\n    label: \"Last Name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(Field, {\n    name: \"email\",\n    component: renderTextField,\n    label: \"Email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(Field, {\n    name: \"sex\",\n    component: RadioButtonGroup,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(RadioButton, {\n    value: \"male\",\n    label: \"male\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), React.createElement(RadioButton, {\n    value: \"female\",\n    label: \"female\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(Field, {\n    name: \"favoriteColor\",\n    component: renderSelectField,\n    label: \"Favorite Color\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(MenuItem, {\n    value: 'ff0000',\n    primaryText: \"Red\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }), React.createElement(MenuItem, {\n    value: '00ff00',\n    primaryText: \"Green\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }), React.createElement(MenuItem, {\n    value: '0000ff',\n    primaryText: \"Blue\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(Field, {\n    name: \"employed\",\n    component: renderCheckbox,\n    label: \"Employed\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(Field, {\n    name: \"notes\",\n    component: renderTextField,\n    label: \"Notes\",\n    multiLine: true,\n    rows: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"submit\",\n    disabled: pristine || submitting,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, \"Submit\"), React.createElement(\"button\", {\n    type: \"button\",\n    disabled: pristine || submitting,\n    onClick: reset,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, \"Clear Values\")));\n};\n\nexport default reduxForm({\n  form: 'addEmployeeForm',\n  // a unique identifier for this form\n  validate,\n  asyncValidate\n})(AddNewEmployeeForm);","map":{"version":3,"sources":["D:/Personal Projects/nr-utility/src/containers/AddNewEmployeeForm.js"],"names":["React","Field","reduxForm","TextField","RadioButton","RadioButtonGroup","Checkbox","SelectField","MenuItem","asyncValidate","validate","values","errors","requiredFields","forEach","field","email","test","renderTextField","input","label","touched","error","renderCheckbox","value","onChange","renderSelectField","event","index","AddNewEmployeeForm","props","handleSubmit","pristine","reset","submitting","form"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport TextField from 'material-ui/TextField'\r\nimport { RadioButton, RadioButtonGroup } from 'material-ui/RadioButton'\r\nimport Checkbox from 'material-ui/Checkbox'\r\nimport SelectField from 'material-ui/SelectField'\r\nimport MenuItem from 'material-ui/MenuItem'\r\nimport asyncValidate from './asyncValidate'\r\n\r\nconst validate = values => {\r\n    const errors = {}\r\n    const requiredFields = [ 'firstName', 'lastName', 'email', 'favoriteColor', 'notes' ]\r\n    requiredFields.forEach(field => {\r\n        if (!values[ field ]) {\r\n            errors[ field ] = 'Required'\r\n        }\r\n    })\r\n    if (values.email && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n        errors.email = 'Invalid email address'\r\n    }\r\n    return errors\r\n}\r\n\r\nconst renderTextField = field => (\r\n    <TextField hintText={field.input.label}\r\n               floatingLabelText={field.input.label}\r\n               errorText={field.touched && field.error}\r\n               {...field.input}\r\n    />\r\n)\r\n\r\nconst renderCheckbox = field => (\r\n    <Checkbox label={field.input.label}\r\n              checked={field.input.value ? true : false}\r\n              onCheck={field.input.onChange}/>\r\n)\r\n\r\nconst renderSelectField = field => (\r\n    <SelectField\r\n        floatingLabelText={field.input.label}\r\n        errorText={field.touched && field.error}\r\n        {...field.input}\r\n        onChange={(event, index, value) => field.input.onChange(value)}>\r\n    </SelectField>\r\n)\r\n\r\nconst AddNewEmployeeForm = props => {\r\n    const { handleSubmit, pristine, reset, submitting } = props\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div>\r\n                <Field name=\"firstName\" component={renderTextField} label=\"First Name\"/>\r\n            </div>\r\n            <div>\r\n                <Field name=\"lastName\" component={renderTextField} label=\"Last Name\"/>\r\n            </div>\r\n            <div>\r\n                <Field name=\"email\" component={renderTextField} label=\"Email\"/>\r\n            </div>\r\n            <div>\r\n                <Field name=\"sex\" component={RadioButtonGroup}>\r\n                    <RadioButton value=\"male\" label=\"male\"/>\r\n                    <RadioButton value=\"female\" label=\"female\"/>\r\n                </Field>\r\n            </div>\r\n            <div>\r\n                <Field name=\"favoriteColor\" component={renderSelectField} label=\"Favorite Color\">\r\n                    <MenuItem value={'ff0000'} primaryText=\"Red\"/>\r\n                    <MenuItem value={'00ff00'} primaryText=\"Green\"/>\r\n                    <MenuItem value={'0000ff'} primaryText=\"Blue\"/>\r\n                </Field>\r\n            </div>\r\n            <div>\r\n                <Field name=\"employed\" component={renderCheckbox} label=\"Employed\"/>\r\n            </div>\r\n            <div>\r\n                <Field name=\"notes\" component={renderTextField} label=\"Notes\" multiLine={true} rows={2}/>\r\n            </div>\r\n            <div>\r\n                <button type=\"submit\" disabled={pristine || submitting}>Submit</button>\r\n                <button type=\"button\" disabled={pristine || submitting} onClick={reset}>Clear Values</button>\r\n            </div>\r\n        </form>\r\n    )\r\n};\r\n\r\nexport default reduxForm({\r\n    form: 'addEmployeeForm',  // a unique identifier for this form\r\n    validate,\r\n    asyncValidate\r\n})(AddNewEmployeeForm)"]},"metadata":{},"sourceType":"module"}