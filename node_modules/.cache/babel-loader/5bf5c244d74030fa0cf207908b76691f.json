{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport useTheme from '../styles/useTheme';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      position: 'absolute',\n      bottom: 0,\n      right: 0,\n      top: -5,\n      left: 0,\n      margin: 0,\n      padding: 0,\n      paddingLeft: 8,\n      pointerEvents: 'none',\n      borderRadius: 'inherit',\n      borderStyle: 'solid',\n      borderWidth: 1\n    },\n\n    /* Styles applied to the legend element when `labelWidth` is provided. */\n    legend: {\n      textAlign: 'left',\n      padding: 0,\n      lineHeight: '11px',\n      // sync with `height` in `legend` styles\n      transition: theme.transitions.create('width', {\n        duration: 150,\n        easing: theme.transitions.easing.easeOut\n      })\n    },\n\n    /* Styles applied to the legend element. */\n    legendLabelled: {\n      textAlign: 'left',\n      padding: 0,\n      height: 11,\n      // sync with `lineHeight` in `legend` styles\n      fontSize: '0.75rem',\n      visibility: 'hidden',\n      maxWidth: 0.01,\n      transition: theme.transitions.create('max-width', {\n        duration: 50,\n        easing: theme.transitions.easing.easeOut\n      }),\n      '& span': {\n        paddingLeft: 5,\n        paddingRight: 5\n      }\n    },\n\n    /* Styles applied to the legend element is notched. */\n    legendNotched: {\n      maxWidth: 1000,\n      transition: theme.transitions.create('max-width', {\n        duration: 100,\n        easing: theme.transitions.easing.easeOut,\n        delay: 50\n      })\n    }\n  };\n};\n/**\r\n * @ignore - internal component.\r\n */\n\nvar NotchedOutline = React.forwardRef(function NotchedOutline(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      label = props.label,\n      labelWidthProp = props.labelWidth,\n      notched = props.notched,\n      style = props.style,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"label\", \"labelWidth\", \"notched\", \"style\"]);\n\n  var theme = useTheme();\n  var align = theme.direction === 'rtl' ? 'right' : 'left';\n\n  if (label !== undefined) {\n    return React.createElement(\"fieldset\", _extends({\n      \"aria-hidden\": true,\n      className: clsx(classes.root, className),\n      ref: ref,\n      style: style\n    }, other), React.createElement(\"legend\", {\n      className: clsx(classes.legendLabelled, notched && classes.legendNotched)\n    }, label ? React.createElement(\"span\", null, label) : React.createElement(\"span\", {\n      dangerouslySetInnerHTML: {\n        __html: '&#8203;'\n      }\n    })));\n  }\n\n  var labelWidth = labelWidthProp > 0 ? labelWidthProp * 0.75 + 8 : 0.01;\n  return React.createElement(\"fieldset\", _extends({\n    \"aria-hidden\": true,\n    style: _extends(_defineProperty({}, \"padding\".concat(capitalize(align)), 8), style),\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other), React.createElement(\"legend\", {\n    className: classes.legend,\n    style: {\n      // IE 11: fieldset with legend does not render\n      // a border radius. This maintains consistency\n      // by always having a legend rendered\n      width: notched ? labelWidth : 0.01\n    }\n  }, React.createElement(\"span\", {\n    dangerouslySetInnerHTML: {\n      __html: '&#8203;'\n    }\n  })));\n});\nprocess.env.NODE_ENV !== \"production\" ? NotchedOutline.propTypes = {\n  /**\r\n   * The content of the component.\r\n   */\n  children: PropTypes.node,\n\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   * See [CSS API](#css) below for more details.\r\n   */\n  classes: PropTypes.object,\n\n  /**\r\n   * @ignore\r\n   */\n  className: PropTypes.string,\n\n  /**\r\n   * The label.\r\n   */\n  label: PropTypes.node,\n\n  /**\r\n   * The width of the label.\r\n   */\n  labelWidth: PropTypes.number.isRequired,\n\n  /**\r\n   * If `true`, the outline is notched to accommodate the label.\r\n   */\n  notched: PropTypes.bool.isRequired,\n\n  /**\r\n   * @ignore\r\n   */\n  style: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateNotchedOutline'\n})(NotchedOutline);","map":{"version":3,"sources":["D:/Personal Projects/nr-utility/node_modules/@material-ui/core/esm/OutlinedInput/NotchedOutline.js"],"names":["_defineProperty","_extends","_objectWithoutProperties","React","PropTypes","clsx","withStyles","useTheme","capitalize","styles","theme","root","position","bottom","right","top","left","margin","padding","paddingLeft","pointerEvents","borderRadius","borderStyle","borderWidth","legend","textAlign","lineHeight","transition","transitions","create","duration","easing","easeOut","legendLabelled","height","fontSize","visibility","maxWidth","paddingRight","legendNotched","delay","NotchedOutline","forwardRef","props","ref","children","classes","className","label","labelWidthProp","labelWidth","notched","style","other","align","direction","undefined","createElement","dangerouslySetInnerHTML","__html","concat","width","process","env","NODE_ENV","propTypes","node","object","string","number","isRequired","bool","name"],"mappings":"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","sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport withStyles from '../styles/withStyles';\r\nimport useTheme from '../styles/useTheme';\r\nimport capitalize from '../utils/capitalize';\r\nexport var styles = function styles(theme) {\r\n  return {\r\n    /* Styles applied to the root element. */\r\n    root: {\r\n      position: 'absolute',\r\n      bottom: 0,\r\n      right: 0,\r\n      top: -5,\r\n      left: 0,\r\n      margin: 0,\r\n      padding: 0,\r\n      paddingLeft: 8,\r\n      pointerEvents: 'none',\r\n      borderRadius: 'inherit',\r\n      borderStyle: 'solid',\r\n      borderWidth: 1\r\n    },\r\n\r\n    /* Styles applied to the legend element when `labelWidth` is provided. */\r\n    legend: {\r\n      textAlign: 'left',\r\n      padding: 0,\r\n      lineHeight: '11px',\r\n      // sync with `height` in `legend` styles\r\n      transition: theme.transitions.create('width', {\r\n        duration: 150,\r\n        easing: theme.transitions.easing.easeOut\r\n      })\r\n    },\r\n\r\n    /* Styles applied to the legend element. */\r\n    legendLabelled: {\r\n      textAlign: 'left',\r\n      padding: 0,\r\n      height: 11,\r\n      // sync with `lineHeight` in `legend` styles\r\n      fontSize: '0.75rem',\r\n      visibility: 'hidden',\r\n      maxWidth: 0.01,\r\n      transition: theme.transitions.create('max-width', {\r\n        duration: 50,\r\n        easing: theme.transitions.easing.easeOut\r\n      }),\r\n      '& span': {\r\n        paddingLeft: 5,\r\n        paddingRight: 5\r\n      }\r\n    },\r\n\r\n    /* Styles applied to the legend element is notched. */\r\n    legendNotched: {\r\n      maxWidth: 1000,\r\n      transition: theme.transitions.create('max-width', {\r\n        duration: 100,\r\n        easing: theme.transitions.easing.easeOut,\r\n        delay: 50\r\n      })\r\n    }\r\n  };\r\n};\r\n/**\r\n * @ignore - internal component.\r\n */\r\n\r\nvar NotchedOutline = React.forwardRef(function NotchedOutline(props, ref) {\r\n  var children = props.children,\r\n      classes = props.classes,\r\n      className = props.className,\r\n      label = props.label,\r\n      labelWidthProp = props.labelWidth,\r\n      notched = props.notched,\r\n      style = props.style,\r\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"label\", \"labelWidth\", \"notched\", \"style\"]);\r\n\r\n  var theme = useTheme();\r\n  var align = theme.direction === 'rtl' ? 'right' : 'left';\r\n\r\n  if (label !== undefined) {\r\n    return React.createElement(\"fieldset\", _extends({\r\n      \"aria-hidden\": true,\r\n      className: clsx(classes.root, className),\r\n      ref: ref,\r\n      style: style\r\n    }, other), React.createElement(\"legend\", {\r\n      className: clsx(classes.legendLabelled, notched && classes.legendNotched)\r\n    }, label ? React.createElement(\"span\", null, label) : React.createElement(\"span\", {\r\n      dangerouslySetInnerHTML: {\r\n        __html: '&#8203;'\r\n      }\r\n    })));\r\n  }\r\n\r\n  var labelWidth = labelWidthProp > 0 ? labelWidthProp * 0.75 + 8 : 0.01;\r\n  return React.createElement(\"fieldset\", _extends({\r\n    \"aria-hidden\": true,\r\n    style: _extends(_defineProperty({}, \"padding\".concat(capitalize(align)), 8), style),\r\n    className: clsx(classes.root, className),\r\n    ref: ref\r\n  }, other), React.createElement(\"legend\", {\r\n    className: classes.legend,\r\n    style: {\r\n      // IE 11: fieldset with legend does not render\r\n      // a border radius. This maintains consistency\r\n      // by always having a legend rendered\r\n      width: notched ? labelWidth : 0.01\r\n    }\r\n  }, React.createElement(\"span\", {\r\n    dangerouslySetInnerHTML: {\r\n      __html: '&#8203;'\r\n    }\r\n  })));\r\n});\r\nprocess.env.NODE_ENV !== \"production\" ? NotchedOutline.propTypes = {\r\n  /**\r\n   * The content of the component.\r\n   */\r\n  children: PropTypes.node,\r\n\r\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   * See [CSS API](#css) below for more details.\r\n   */\r\n  classes: PropTypes.object,\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  className: PropTypes.string,\r\n\r\n  /**\r\n   * The label.\r\n   */\r\n  label: PropTypes.node,\r\n\r\n  /**\r\n   * The width of the label.\r\n   */\r\n  labelWidth: PropTypes.number.isRequired,\r\n\r\n  /**\r\n   * If `true`, the outline is notched to accommodate the label.\r\n   */\r\n  notched: PropTypes.bool.isRequired,\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  style: PropTypes.object\r\n} : void 0;\r\nexport default withStyles(styles, {\r\n  name: 'PrivateNotchedOutline'\r\n})(NotchedOutline);"]},"metadata":{},"sourceType":"module"}