{"ast":null,"code":"import _slicedToArray from \"D:\\\\Personal Projects\\\\nr-utility\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\Personal Projects\\\\nr-utility\\\\src\\\\containers\\\\AddNewEmployeeForm.js\";\nimport React from \"react\";\nimport { Field, FieldArray, reduxForm } from \"redux-form\";\nimport FirstNameField from \"../components/FirstNameField\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\n\nconst AddNewEmployeeFormFunc = ({\n  handleSubmit,\n  pristine,\n  reset,\n  submitting\n}) => {\n  let _React$useState = React.useState(''),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      firstName = _React$useState2[0],\n      setFirstName = _React$useState2[1];\n\n  const renderField = ({\n    input,\n    label,\n    type,\n    meta: {\n      touched,\n      error\n    }\n  }) => React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(TextField, Object.assign({}, input, {\n    required: true,\n    id: \"standard-required\",\n    label: \"First Name\",\n    onChange: event => console.log(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }))));\n\n  const renderMembers = ({\n    fields,\n    meta: {\n      error,\n      submitFailed\n    }\n  }) => React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => fields.push({}),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"Add Member\"), submitFailed && error && React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, error)), fields.map((member, index) => React.createElement(\"li\", {\n    key: index,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => fields.remove(index),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"Remove Member\"), React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"Member #\", index + 1), React.createElement(Field, {\n    name: `${member}.firstName`,\n    type: \"text\",\n    component: renderField,\n    label: \"First Name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }), React.createElement(Field, {\n    name: `${member}.lastName`,\n    type: \"text\",\n    component: renderField,\n    label: \"Last Name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }))));\n\n  let formSubmit = values => {\n    console.log(values);\n  };\n\n  return React.createElement(\"form\", {\n    onSubmit: handleSubmit(formSubmit),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(FieldArray, {\n    name: \"members\",\n    component: renderMembers,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"submit\",\n    disabled: submitting,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"Add\"), React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    disabled: pristine || submitting,\n    onClick: reset,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"Clear Values\"));\n};\n\nconst AddNewEmployeeForm = reduxForm({\n  form: 'addEmployeeForm'\n})(AddNewEmployeeFormFunc);\nexport default AddNewEmployeeForm;","map":{"version":3,"sources":["D:/Personal Projects/nr-utility/src/containers/AddNewEmployeeForm.js"],"names":["React","Field","FieldArray","reduxForm","FirstNameField","Button","TextField","AddNewEmployeeFormFunc","handleSubmit","pristine","reset","submitting","useState","firstName","setFirstName","renderField","input","label","type","meta","touched","error","event","console","log","target","value","renderMembers","fields","submitFailed","push","map","member","index","remove","formSubmit","values","AddNewEmployeeForm","form"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Field, FieldArray, reduxForm } from \"redux-form\";\r\nimport FirstNameField from \"../components/FirstNameField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nconst AddNewEmployeeFormFunc = ({ handleSubmit, pristine, reset, submitting }) => {\r\n\r\n    let[firstName, setFirstName] = React.useState('');\r\n\r\n    const renderField = ({ input, label, type, meta: { touched, error } }) => (\r\n        <div>\r\n            {/*<label>{label}</label>*/}\r\n            <div>\r\n                {/*<input {...input} type={type} placeholder={label} />*/}\r\n                <TextField {...input}\r\n                           required\r\n                           id=\"standard-required\"\r\n                           label=\"First Name\"\r\n                           onChange={(event) => console.log(event.target.value)} />\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n    const renderMembers = ({ fields, meta: { error, submitFailed } }) => (\r\n        <ul>\r\n            <li>\r\n                <button type=\"button\" onClick={() => fields.push({})}>\r\n                    Add Member\r\n                </button>\r\n                {submitFailed && error && <span>{error}</span>}\r\n            </li>\r\n            {fields.map((member, index) => (\r\n                <li key={index}>\r\n                    <button type=\"button\" onClick={() => fields.remove(index)}>\r\n                        Remove Member\r\n                    </button>\r\n                    <h4>Member #{index + 1}</h4>\r\n                    <Field\r\n                        name={`${member}.firstName`}\r\n                        type=\"text\"\r\n                        component={renderField}\r\n                        label=\"First Name\"\r\n                    />\r\n                    <Field\r\n                        name={`${member}.lastName`}\r\n                        type=\"text\"\r\n                        component={renderField}\r\n                        label=\"Last Name\"\r\n                    />\r\n                </li>\r\n            ))}\r\n        </ul>\r\n    );\r\n\r\n\r\n    let formSubmit = (values) => {\r\n        console.log(values);\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit(formSubmit) }>\r\n            <FieldArray name=\"members\" component={renderMembers} />\r\n            <button type=\"submit\" disabled={submitting}>Add</button>\r\n            <Button variant=\"contained\" color=\"primary\" disabled={pristine || submitting} onClick={reset}>Clear Values</Button>\r\n        </form>\r\n    );\r\n};\r\n\r\nconst AddNewEmployeeForm = reduxForm({\r\n   form: 'addEmployeeForm'\r\n})(AddNewEmployeeFormFunc);\r\n\r\nexport default AddNewEmployeeForm;"]},"metadata":{},"sourceType":"module"}