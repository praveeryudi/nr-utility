{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nimport BreadcrumbCollapsed from './BreadcrumbCollapsed';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {},\n\n  /* Styles applied to the ol element. */\n  ol: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    alignItems: 'center',\n    padding: 0,\n    // Reset\n    margin: 0 // Reset\n\n  },\n\n  /* Styles applied to the li element. */\n  li: {\n    listStyle: 'none'\n  },\n\n  /* Styles applied to the separator element. */\n  separator: {\n    display: 'flex',\n    userSelect: 'none',\n    marginLeft: 8,\n    marginRight: 8\n  }\n};\n\nfunction insertSeparators(items, className, separator) {\n  return items.reduce(function (acc, current, index) {\n    if (index < items.length - 1) {\n      acc = acc.concat(current, React.createElement(\"li\", {\n        \"aria-hidden\": true,\n        key: \"separator-\".concat(index),\n        className: className\n      }, separator));\n    } else {\n      acc.push(current);\n    }\n\n    return acc;\n  }, []);\n}\n\nvar Breadcrumbs = React.forwardRef(function Breadcrumbs(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'nav' : _props$component,\n      _props$itemsAfterColl = props.itemsAfterCollapse,\n      itemsAfterCollapse = _props$itemsAfterColl === void 0 ? 1 : _props$itemsAfterColl,\n      _props$itemsBeforeCol = props.itemsBeforeCollapse,\n      itemsBeforeCollapse = _props$itemsBeforeCol === void 0 ? 1 : _props$itemsBeforeCol,\n      _props$maxItems = props.maxItems,\n      maxItems = _props$maxItems === void 0 ? 8 : _props$maxItems,\n      _props$separator = props.separator,\n      separator = _props$separator === void 0 ? '/' : _props$separator,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"component\", \"itemsAfterCollapse\", \"itemsBeforeCollapse\", \"maxItems\", \"separator\"]);\n\n  var _React$useState = React.useState(false),\n      expanded = _React$useState[0],\n      setExpanded = _React$useState[1];\n\n  var renderItemsBeforeAndAfter = function renderItemsBeforeAndAfter(allItems) {\n    var handleClickExpand = function handleClickExpand() {\n      setExpanded(true);\n    }; // This defends against someone passing weird input, to ensure that if all\n    // items would be shown anyway, we just show all items without the EllipsisItem\n\n\n    if (itemsBeforeCollapse + itemsAfterCollapse >= allItems.length) {\n      if (process.env.NODE_ENV !== 'production') {\n        console.error(['Material-UI: you have provided an invalid combination of props to the Breadcrumbs.', \"itemsAfterCollapse={\".concat(itemsAfterCollapse, \"} + itemsBeforeCollapse={\").concat(itemsBeforeCollapse, \"} >= maxItems={\").concat(maxItems, \"}\")].join('\\n'));\n      }\n\n      return allItems;\n    }\n\n    return [].concat(_toConsumableArray(allItems.slice(0, itemsBeforeCollapse)), [React.createElement(BreadcrumbCollapsed, {\n      key: \"ellipsis\",\n      onClick: handleClickExpand\n    })], _toConsumableArray(allItems.slice(allItems.length - itemsAfterCollapse, allItems.length)));\n  };\n\n  var allItems = React.Children.toArray(children).filter(function (child) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"Material-UI: the Breadcrumbs component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    return React.isValidElement(child);\n  }).map(function (child, index) {\n    return React.createElement(\"li\", {\n      className: classes.li,\n      key: \"child-\".concat(index)\n    }, child);\n  });\n  return React.createElement(Typography, _extends({\n    ref: ref,\n    component: Component,\n    color: \"textSecondary\",\n    className: clsx(classes.root, className)\n  }, other), React.createElement(\"ol\", {\n    className: classes.ol\n  }, insertSeparators(expanded || maxItems && allItems.length <= maxItems ? allItems : renderItemsBeforeAndAfter(allItems), classes.separator, separator)));\n});\nprocess.env.NODE_ENV !== \"production\" ? Breadcrumbs.propTypes = {\n  /**\r\n   * The breadcrumb children.\r\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   * See [CSS API](#css) below for more details.\r\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\r\n   * @ignore\r\n   */\n  className: PropTypes.string,\n\n  /**\r\n   * The component used for the root node.\r\n   * Either a string to use a DOM element or a component.\r\n   * By default, it maps the variant to a good default headline component.\r\n   */\n  component: PropTypes.elementType,\n\n  /**\r\n   * If max items is exceeded, the number of items to show after the ellipsis.\r\n   */\n  itemsAfterCollapse: PropTypes.number,\n\n  /**\r\n   * If max items is exceeded, the number of items to show before the ellipsis.\r\n   */\n  itemsBeforeCollapse: PropTypes.number,\n\n  /**\r\n   * Specifies the maximum number of breadcrumbs to display. When there are more\r\n   * than the maximum number, only the first `itemsBeforeCollapse` and last `itemsAfterCollapse`\r\n   * will be shown, with an ellipsis in between.\r\n   */\n  maxItems: PropTypes.number,\n\n  /**\r\n   * Custom separator node.\r\n   */\n  separator: PropTypes.node\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiBreadcrumbs'\n})(Breadcrumbs);","map":{"version":3,"sources":["D:/Personal Projects/nr-utility/node_modules/@material-ui/core/esm/Breadcrumbs/Breadcrumbs.js"],"names":["_extends","_toConsumableArray","_objectWithoutProperties","React","isFragment","PropTypes","clsx","withStyles","Typography","BreadcrumbCollapsed","styles","root","ol","display","flexWrap","alignItems","padding","margin","li","listStyle","separator","userSelect","marginLeft","marginRight","insertSeparators","items","className","reduce","acc","current","index","length","concat","createElement","key","push","Breadcrumbs","forwardRef","props","ref","children","classes","_props$component","component","Component","_props$itemsAfterColl","itemsAfterCollapse","_props$itemsBeforeCol","itemsBeforeCollapse","_props$maxItems","maxItems","_props$separator","other","_React$useState","useState","expanded","setExpanded","renderItemsBeforeAndAfter","allItems","handleClickExpand","process","env","NODE_ENV","console","error","join","slice","onClick","Children","toArray","filter","child","isValidElement","map","color","propTypes","node","isRequired","object","string","elementType","number","name"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\r\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\r\nimport React from 'react';\r\nimport { isFragment } from 'react-is';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport withStyles from '../styles/withStyles';\r\nimport Typography from '../Typography';\r\nimport BreadcrumbCollapsed from './BreadcrumbCollapsed';\r\nexport var styles = {\r\n  /* Styles applied to the root element. */\r\n  root: {},\r\n\r\n  /* Styles applied to the ol element. */\r\n  ol: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    alignItems: 'center',\r\n    padding: 0,\r\n    // Reset\r\n    margin: 0 // Reset\r\n\r\n  },\r\n\r\n  /* Styles applied to the li element. */\r\n  li: {\r\n    listStyle: 'none'\r\n  },\r\n\r\n  /* Styles applied to the separator element. */\r\n  separator: {\r\n    display: 'flex',\r\n    userSelect: 'none',\r\n    marginLeft: 8,\r\n    marginRight: 8\r\n  }\r\n};\r\n\r\nfunction insertSeparators(items, className, separator) {\r\n  return items.reduce(function (acc, current, index) {\r\n    if (index < items.length - 1) {\r\n      acc = acc.concat(current, React.createElement(\"li\", {\r\n        \"aria-hidden\": true,\r\n        key: \"separator-\".concat(index),\r\n        className: className\r\n      }, separator));\r\n    } else {\r\n      acc.push(current);\r\n    }\r\n\r\n    return acc;\r\n  }, []);\r\n}\r\n\r\nvar Breadcrumbs = React.forwardRef(function Breadcrumbs(props, ref) {\r\n  var children = props.children,\r\n      classes = props.classes,\r\n      className = props.className,\r\n      _props$component = props.component,\r\n      Component = _props$component === void 0 ? 'nav' : _props$component,\r\n      _props$itemsAfterColl = props.itemsAfterCollapse,\r\n      itemsAfterCollapse = _props$itemsAfterColl === void 0 ? 1 : _props$itemsAfterColl,\r\n      _props$itemsBeforeCol = props.itemsBeforeCollapse,\r\n      itemsBeforeCollapse = _props$itemsBeforeCol === void 0 ? 1 : _props$itemsBeforeCol,\r\n      _props$maxItems = props.maxItems,\r\n      maxItems = _props$maxItems === void 0 ? 8 : _props$maxItems,\r\n      _props$separator = props.separator,\r\n      separator = _props$separator === void 0 ? '/' : _props$separator,\r\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"component\", \"itemsAfterCollapse\", \"itemsBeforeCollapse\", \"maxItems\", \"separator\"]);\r\n\r\n  var _React$useState = React.useState(false),\r\n      expanded = _React$useState[0],\r\n      setExpanded = _React$useState[1];\r\n\r\n  var renderItemsBeforeAndAfter = function renderItemsBeforeAndAfter(allItems) {\r\n    var handleClickExpand = function handleClickExpand() {\r\n      setExpanded(true);\r\n    }; // This defends against someone passing weird input, to ensure that if all\r\n    // items would be shown anyway, we just show all items without the EllipsisItem\r\n\r\n\r\n    if (itemsBeforeCollapse + itemsAfterCollapse >= allItems.length) {\r\n      if (process.env.NODE_ENV !== 'production') {\r\n        console.error(['Material-UI: you have provided an invalid combination of props to the Breadcrumbs.', \"itemsAfterCollapse={\".concat(itemsAfterCollapse, \"} + itemsBeforeCollapse={\").concat(itemsBeforeCollapse, \"} >= maxItems={\").concat(maxItems, \"}\")].join('\\n'));\r\n      }\r\n\r\n      return allItems;\r\n    }\r\n\r\n    return [].concat(_toConsumableArray(allItems.slice(0, itemsBeforeCollapse)), [React.createElement(BreadcrumbCollapsed, {\r\n      key: \"ellipsis\",\r\n      onClick: handleClickExpand\r\n    })], _toConsumableArray(allItems.slice(allItems.length - itemsAfterCollapse, allItems.length)));\r\n  };\r\n\r\n  var allItems = React.Children.toArray(children).filter(function (child) {\r\n    if (process.env.NODE_ENV !== 'production') {\r\n      if (isFragment(child)) {\r\n        console.error([\"Material-UI: the Breadcrumbs component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\r\n      }\r\n    }\r\n\r\n    return React.isValidElement(child);\r\n  }).map(function (child, index) {\r\n    return React.createElement(\"li\", {\r\n      className: classes.li,\r\n      key: \"child-\".concat(index)\r\n    }, child);\r\n  });\r\n  return React.createElement(Typography, _extends({\r\n    ref: ref,\r\n    component: Component,\r\n    color: \"textSecondary\",\r\n    className: clsx(classes.root, className)\r\n  }, other), React.createElement(\"ol\", {\r\n    className: classes.ol\r\n  }, insertSeparators(expanded || maxItems && allItems.length <= maxItems ? allItems : renderItemsBeforeAndAfter(allItems), classes.separator, separator)));\r\n});\r\nprocess.env.NODE_ENV !== \"production\" ? Breadcrumbs.propTypes = {\r\n  /**\r\n   * The breadcrumb children.\r\n   */\r\n  children: PropTypes.node.isRequired,\r\n\r\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   * See [CSS API](#css) below for more details.\r\n   */\r\n  classes: PropTypes.object.isRequired,\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  className: PropTypes.string,\r\n\r\n  /**\r\n   * The component used for the root node.\r\n   * Either a string to use a DOM element or a component.\r\n   * By default, it maps the variant to a good default headline component.\r\n   */\r\n  component: PropTypes.elementType,\r\n\r\n  /**\r\n   * If max items is exceeded, the number of items to show after the ellipsis.\r\n   */\r\n  itemsAfterCollapse: PropTypes.number,\r\n\r\n  /**\r\n   * If max items is exceeded, the number of items to show before the ellipsis.\r\n   */\r\n  itemsBeforeCollapse: PropTypes.number,\r\n\r\n  /**\r\n   * Specifies the maximum number of breadcrumbs to display. When there are more\r\n   * than the maximum number, only the first `itemsBeforeCollapse` and last `itemsAfterCollapse`\r\n   * will be shown, with an ellipsis in between.\r\n   */\r\n  maxItems: PropTypes.number,\r\n\r\n  /**\r\n   * Custom separator node.\r\n   */\r\n  separator: PropTypes.node\r\n} : void 0;\r\nexport default withStyles(styles, {\r\n  name: 'MuiBreadcrumbs'\r\n})(Breadcrumbs);"]},"metadata":{},"sourceType":"module"}