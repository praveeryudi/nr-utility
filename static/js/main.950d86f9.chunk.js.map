{"version":3,"sources":["modules/addEmployee/PersonalDetailsForm.js","modules/addEmployee/Review.js","components/Copyright.js","util/NumberFormatCustom.js","modules/addEmployee/SalaryField.js","modules/addEmployee/CommissionField.js","modules/addEmployee/SelectManager.js","modules/addEmployee/SelectJobId.js","modules/addEmployee/SelectDepartment.js","modules/addEmployee/SelectHireDate.js","modules/addEmployee/JobDetailsForm.js","modules/addEmployee/AddNewEmployeeForm.js","ApiConstants.js","containers/EmployeesList.js","actions/employeeActions.js","containers/AppDrawer.js","App.js","reducers/employeeReducer.js","reducers/rootReducer.js","store.js","serviceWorker.js","index.js"],"names":["PersonalDetailsForm","Fragment","Grid","container","spacing","item","xs","sm","TextField","required","id","name","label","fullWidth","products","desc","price","addresses","payments","detail","useStyles","makeStyles","theme","listItem","padding","total","fontWeight","title","marginTop","Review","classes","Typography","variant","gutterBottom","List","disablePadding","map","product","ListItem","className","key","ListItemText","primary","secondary","join","direction","payment","Copyright","color","align","Link","href","Date","getFullYear","NumberFormatCustom","props","inputRef","onChange","other","getInputRef","onValueChange","values","target","value","thousandSeparator","isNumericString","prefix","SalaryField","React","useState","numberformat","setValues","event","InputProps","inputComponent","CommissionField","type","SelectManager","SelectJobId","SelectDepartment","SelectHireDate","selectedDate","setSelectedDate","utils","DateFnsUtils","disableToolbar","format","margin","date","KeyboardButtonProps","JobDetailsForm","md","appBar","position","layout","width","marginLeft","marginRight","breakpoints","up","paper","marginBottom","stepper","buttons","display","justifyContent","button","steps","AddNewEmployeeForm","activeStep","setActiveStep","CssBaseline","Paper","component","Stepper","Step","StepLabel","length","step","Error","getStepContent","Button","onClick","host","FETCH_ALL_EMPLOYEES","FETCH_EMPLOYEE_JOB_HISTORY","connect","state","employees","empReducer","dispatch","fetchEmployees","a","async","axios","get","Urls","then","res","data","payload","catch","error","console","fetchJobHistory","employeeId","jobHistory","fetchEmployeeJobHistory","len","useEffect","columns","options","filter","sort","customBodyRender","filterType","responsive","rowsPerPage","selectableRows","fixedHeaderOptions","xAxis","yAxis","root","drawer","flexShrink","drawerPaper","toolbar","mixins","content","flexGrow","backgroundColor","palette","background","default","AppDrawer","selectedIndex","setSelectedIndex","onMenuItemClick","index","AppBar","Toolbar","noWrap","Drawer","anchor","Divider","ListItemIcon","App","initialState","currentEmployee","employeeReducer","action","rootReducer","combineReducers","form","formReducer","store","createStore","applyMiddleware","thunk","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.950d86f9.chunk.js","sourcesContent":["import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst PersonalDetailsForm = () => {\r\n    return (\r\n        <React.Fragment>\r\n            <Grid container spacing={2}>\r\n                <Grid item xs={12} sm={6}>\r\n                    <TextField\r\n                        required\r\n                        id=\"firstName\"\r\n                        name=\"firstName\"\r\n                        label=\"First name\"\r\n                        fullWidth\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                    <TextField\r\n                        required\r\n                        id=\"lastName\"\r\n                        name=\"lastName\"\r\n                        label=\"Last name\"\r\n                        fullWidth\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                    <TextField\r\n                        required\r\n                        id=\"email\"\r\n                        name=\"email\"\r\n                        label=\"Email\"\r\n                        fullWidth\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                    <TextField\r\n                        required\r\n                        id=\"phone\"\r\n                        name=\"phone\"\r\n                        label=\"Phone\"\r\n                        fullWidth\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default PersonalDetailsForm;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst products = [\r\n    { name: 'Product 1', desc: 'A nice thing', price: '$9.99' },\r\n    { name: 'Product 2', desc: 'Another thing', price: '$3.45' },\r\n    { name: 'Product 3', desc: 'Something else', price: '$6.51' },\r\n    { name: 'Product 4', desc: 'Best thing of all', price: '$14.11' },\r\n    { name: 'Shipping', desc: '', price: 'Free' },\r\n];\r\nconst addresses = ['1 Material-UI Drive', 'Reactville', 'Anytown', '99999', 'USA'];\r\nconst payments = [\r\n    { name: 'Card type', detail: 'Visa' },\r\n    { name: 'Card holder', detail: 'Mr John Smith' },\r\n    { name: 'Card number', detail: 'xxxx-xxxx-xxxx-1234' },\r\n    { name: 'Expiry date', detail: '04/2024' },\r\n];\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    listItem: {\r\n        padding: theme.spacing(1, 0),\r\n    },\r\n    total: {\r\n        fontWeight: 700,\r\n    },\r\n    title: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nconst Review = () => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n                Order summary\r\n            </Typography>\r\n            <List disablePadding>\r\n                {products.map(product => (\r\n                    <ListItem className={classes.listItem} key={product.name}>\r\n                        <ListItemText primary={product.name} secondary={product.desc} />\r\n                        <Typography variant=\"body2\">{product.price}</Typography>\r\n                    </ListItem>\r\n                ))}\r\n                <ListItem className={classes.listItem}>\r\n                    <ListItemText primary=\"Total\" />\r\n                    <Typography variant=\"subtitle1\" className={classes.total}>\r\n                        $34.06\r\n                    </Typography>\r\n                </ListItem>\r\n            </List>\r\n            <Grid container spacing={2}>\r\n                <Grid item xs={12} sm={6}>\r\n                    <Typography variant=\"h6\" gutterBottom className={classes.title}>\r\n                        Shipping\r\n                    </Typography>\r\n                    <Typography gutterBottom>John Smith</Typography>\r\n                    <Typography gutterBottom>{addresses.join(', ')}</Typography>\r\n                </Grid>\r\n                <Grid item container direction=\"column\" xs={12} sm={6}>\r\n                    <Typography variant=\"h6\" gutterBottom className={classes.title}>\r\n                        Payment details\r\n                    </Typography>\r\n                    <Grid container>\r\n                        {payments.map(payment => (\r\n                            <React.Fragment key={payment.name}>\r\n                                <Grid item xs={6}>\r\n                                    <Typography gutterBottom>{payment.name}</Typography>\r\n                                </Grid>\r\n                                <Grid item xs={6}>\r\n                                    <Typography gutterBottom>{payment.detail}</Typography>\r\n                                </Grid>\r\n                            </React.Fragment>\r\n                        ))}\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Review;","import Typography from \"@material-ui/core/Typography\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport React from \"react\";\r\n\r\nconst Copyright = () => {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            {'Copyright © '}\r\n            <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n                Your Website\r\n            </Link>{' '}\r\n            {new Date().getFullYear()}\r\n            {'.'}\r\n        </Typography>\r\n    );\r\n};\r\n\r\nexport default Copyright;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport NumberFormat from 'react-number-format';\r\n\r\nexport default function NumberFormatCustom(props) {\r\n    const { inputRef, onChange, ...other } = props;\r\n\r\n    return (\r\n        <NumberFormat\r\n            {...other}\r\n            getInputRef={inputRef}\r\n            onValueChange={values => {\r\n                onChange({\r\n                    target: {\r\n                        value: values.value,\r\n                    },\r\n                });\r\n            }}\r\n            thousandSeparator\r\n            isNumericString\r\n            prefix=\"₹\"\r\n        />\r\n    );\r\n}\r\n\r\nNumberFormatCustom.propTypes = {\r\n    inputRef: PropTypes.func.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n};","import NumberFormatCustom from \"../../util/NumberFormatCustom\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport React from \"react\";\r\n\r\nexport default function SalaryField() {\r\n\r\n    const [values, setValues] = React.useState({\r\n        numberformat: '1320',\r\n    });\r\n\r\n    const handleSalaryChange = name => event => {\r\n        setValues({\r\n            ...values,\r\n            [name]: event.target.value,\r\n        });\r\n    };\r\n\r\n    return (\r\n        <TextField\r\n            required\r\n            id=\"salary\"\r\n            value={values.numberformat}\r\n            onChange={handleSalaryChange('numberformat')}\r\n            InputProps={{\r\n                inputComponent: NumberFormatCustom,\r\n            }}\r\n            label=\"Fixed Salary\"\r\n            fullWidth\r\n        />\r\n    )\r\n};","import React from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nexport default function CommissionField() {\r\n  return (\r\n      <TextField\r\n          type=\"number\"\r\n          id=\"commissionPct\"\r\n          label=\"Commission%\"\r\n          fullWidth\r\n      />\r\n  )\r\n};","import TextField from \"@material-ui/core/TextField\";\r\nimport React from \"react\";\r\n\r\nexport default function SelectManager() {\r\n    return (\r\n        <TextField\r\n            required\r\n            id=\"managerId\"\r\n            label=\"Manager\"\r\n            fullWidth\r\n        />\r\n    )\r\n};","import TextField from \"@material-ui/core/TextField\";\r\nimport React from \"react\";\r\n\r\nexport default function SelectJobId() {\r\n    return (\r\n        <TextField\r\n            required\r\n            id=\"jobId\"\r\n            label=\"Job Id\"\r\n            fullWidth\r\n        />\r\n    )\r\n};","import TextField from \"@material-ui/core/TextField\";\r\nimport React from \"react\";\r\n\r\nexport default function SelectDepartment() {\r\n    return (\r\n        <TextField\r\n            required\r\n            id=\"deptId\"\r\n            label=\"Department\"\r\n            fullWidth\r\n        />\r\n    )\r\n};","import React from 'react';\r\nimport 'date-fns';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {KeyboardDatePicker, MuiPickersUtilsProvider} from '@material-ui/pickers';\r\n\r\nexport default function SelectHireDate() {\r\n\r\n    const [selectedDate, setSelectedDate] = React.useState(new Date());\r\n\r\n    const handleDateChange = date => {\r\n        setSelectedDate(date);\r\n    };\r\n\r\n    return (\r\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n            <KeyboardDatePicker\r\n                disableToolbar\r\n                fullWidth\r\n                variant=\"inline\"\r\n                format=\"MM/dd/yyyy\"\r\n                margin=\"normal\"\r\n                id=\"hireDate\"\r\n                label=\"Hire Date\"\r\n                value={selectedDate}\r\n                onChange={handleDateChange}\r\n                KeyboardButtonProps={{\r\n                    'aria-label': 'change date',\r\n                }}\r\n            />\r\n        </MuiPickersUtilsProvider>\r\n    )\r\n};","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport SalaryField from \"./SalaryField\";\r\nimport CommissionField from \"./CommissionField\";\r\nimport SelectManager from \"./SelectManager\";\r\nimport SelectJobId from \"./SelectJobId\";\r\nimport SelectDepartment from \"./SelectDepartment\";\r\nimport SelectHireDate from \"./SelectHireDate\";\r\n\r\nconst JobDetailsForm = () => {\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={12} md={6}>\r\n                    <SelectHireDate />\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                    <SelectJobId />\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                    <SalaryField />\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                    <CommissionField />\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                    <SelectManager />\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                    <SelectDepartment />\r\n                </Grid>\r\n            </Grid>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default JobDetailsForm;","import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport PersonalDetailsForm from './PersonalDetailsForm';\r\nimport Review from './Review';\r\nimport Copyright from \"../../components/Copyright\";\r\nimport JobDetailsForm from \"./JobDetailsForm\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    appBar: {\r\n        position: 'relative',\r\n    },\r\n    layout: {\r\n        width: 'auto',\r\n        marginLeft: theme.spacing(2),\r\n        marginRight: theme.spacing(2),\r\n        [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\r\n            width: 600,\r\n            marginLeft: 'auto',\r\n            marginRight: 'auto',\r\n        },\r\n    },\r\n    paper: {\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(3),\r\n        padding: theme.spacing(2),\r\n        [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\r\n            marginTop: theme.spacing(2),\r\n            marginBottom: theme.spacing(6),\r\n            padding: theme.spacing(3),\r\n        },\r\n    },\r\n    stepper: {\r\n        padding: theme.spacing(3, 0, 5),\r\n    },\r\n    buttons: {\r\n        display: 'flex',\r\n        justifyContent: 'flex-end',\r\n    },\r\n    button: {\r\n        marginTop: theme.spacing(3),\r\n        marginLeft: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nconst steps = ['Personal Details', 'Job Details', 'Review'];\r\n\r\nfunction getStepContent(step) {\r\n    switch (step) {\r\n        case 0:\r\n            return <PersonalDetailsForm />;\r\n        case 1:\r\n            return <JobDetailsForm />;\r\n        case 2:\r\n            return <Review />;\r\n        default:\r\n            throw new Error('Unknown step');\r\n    }\r\n}\r\n\r\nconst AddNewEmployeeForm = () => {\r\n    const classes = useStyles();\r\n    const [activeStep, setActiveStep] = React.useState(0);\r\n\r\n    const handleNext = () => {\r\n        setActiveStep(activeStep + 1);\r\n    };\r\n\r\n    const handleBack = () => {\r\n        setActiveStep(activeStep - 1);\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <CssBaseline />\r\n            <main className={classes.layout}>\r\n                <Paper className={classes.paper}>\r\n                    <Typography component=\"h1\" variant=\"h5\" align=\"center\">\r\n                        Add Employee\r\n                    </Typography>\r\n                    <Stepper activeStep={activeStep} className={classes.stepper}>\r\n                        {steps.map(label => (\r\n                            <Step key={label}>\r\n                                <StepLabel>{label}</StepLabel>\r\n                            </Step>\r\n                        ))}\r\n                    </Stepper>\r\n                    <React.Fragment>\r\n                        {activeStep === steps.length ? (\r\n                            <React.Fragment>\r\n                                <Typography variant=\"h5\" gutterBottom>\r\n                                    Thank you for your order.\r\n                                </Typography>\r\n                                <Typography variant=\"subtitle1\">\r\n                                    Your order number is #2001539. We have emailed your order confirmation, and will\r\n                                    send you an update when your order has shipped.\r\n                                </Typography>\r\n                            </React.Fragment>\r\n                        ) : (\r\n                            <React.Fragment>\r\n                                {getStepContent(activeStep)}\r\n                                <div className={classes.buttons}>\r\n                                    {activeStep !== 0 && (\r\n                                        <Button onClick={handleBack} className={classes.button}>\r\n                                            Back\r\n                                        </Button>\r\n                                    )}\r\n                                    <Button\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        onClick={handleNext}\r\n                                        className={classes.button}\r\n                                    >\r\n                                        {activeStep === steps.length - 1 ? 'Place order' : 'Next'}\r\n                                    </Button>\r\n                                </div>\r\n                            </React.Fragment>\r\n                        )}\r\n                    </React.Fragment>\r\n                </Paper>\r\n                <Copyright />\r\n            </main>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default AddNewEmployeeForm;","const host = \"praveeryudi-org.cfapps.io\";\r\n\r\nexport const FETCH_ALL_EMPLOYEES = `https://${host}/employees`;\r\nexport const FETCH_EMPLOYEE_JOB_HISTORY = `http://${host}/api/fetch/employee/jobHistory/`;","import React, {useEffect} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {fetchAllEmployees, fetchEmployeeJobHistory} from '../actions/employeeActions';\r\nimport MUIDataTable from \"mui-datatables\";\r\n\r\nconst EmployeesList = (props) => {\r\n\r\n    const len = props.employees.length;\r\n\r\n    useEffect(() => {\r\n        props.fetchEmployees();\r\n    }, [len]);\r\n\r\n    const data = props.employees;\r\n    const columns = [\r\n        {\r\n            name: \"id\",\r\n            label: \"Id\",\r\n            options: {\r\n                filter: true,\r\n                sort: true,\r\n                customBodyRender: (value) => {\r\n                    return (\r\n                      <a href={props.fetchJobHistory(value)}>{value}</a>\r\n                    );\r\n                  }\r\n            }\r\n        },\r\n        {\r\n            name: \"firstName\",\r\n            label: \"First Name\",\r\n            options: {\r\n                filter: true,\r\n                sort: true,\r\n            }\r\n        },\r\n        {\r\n            name: \"lastName\",\r\n            label: \"Last Name\",\r\n            options: {\r\n                filter: true,\r\n                sort: true,\r\n            }\r\n        },\r\n        {\r\n            name: \"email\",\r\n            label: \"Email\",\r\n            options: {\r\n                filter: true,\r\n                sort: false,\r\n            }\r\n        },\r\n        {\r\n            name: \"phoneNumber\",\r\n            label: \"Phone\",\r\n            options: {\r\n                filter: true,\r\n                sort: false,\r\n            }\r\n        },\r\n        {\r\n            name: \"hireDate\",\r\n            label: \"Hire Date\",\r\n            options: {\r\n                filter: false,\r\n                sort: true,\r\n            }\r\n        },\r\n        {\r\n            name: \"jobId\",\r\n            label: \"Job Id\",\r\n            options: {\r\n                filter: true,\r\n                sort: false,\r\n            }\r\n        },\r\n        {\r\n            name: \"salary\",\r\n            label: \"Salary\",\r\n            options: {\r\n                filter: false,\r\n                sort: true,\r\n            }\r\n        },\r\n        {\r\n            name: \"commissionPct\",\r\n            label: \"Commission\",\r\n            options: {\r\n                filter: true,\r\n                sort: true,\r\n            }\r\n        },\r\n        {\r\n            name: \"managerId\",\r\n            label: \"Manager Id\",\r\n            options: {\r\n                filter: true,\r\n                sort: false,\r\n            }\r\n        },\r\n        {\r\n            name: \"departmentId\",\r\n            label: \"Department Id\",\r\n            options: {\r\n                filter: true,\r\n                sort: false,\r\n            }\r\n        },\r\n    ];\r\n\r\n    const options = {\r\n        filter: true,\r\n        filterType: 'dropdown',\r\n        responsive: 'scrollMaxHeight',\r\n        rowsPerPage: 10,\r\n        selectableRows: 'none',\r\n        fixedHeaderOptions: {\r\n            xAxis: false,\r\n            yAxis: true\r\n        },\r\n    };\r\n\r\n    return (\r\n        <MUIDataTable\r\n            title={\"Employee List\"}\r\n            data={data}\r\n            columns={columns}\r\n            options={options}\r\n        />\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    employees: state.empReducer.employees,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    fetchEmployees: () => dispatch(fetchAllEmployees()),\r\n    fetchJobHistory: (employeeId) => dispatch(fetchEmployeeJobHistory(employeeId)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EmployeesList);","import axios from \"axios\";\r\nimport * as Urls from \"./../ApiConstants\";\r\n\r\nexport const fetchAllEmployees = () => {\r\n    return async(dispatch) => {\r\n        await axios.get(Urls.FETCH_ALL_EMPLOYEES)\r\n            .then(res => {\r\n                let data = res.data;\r\n                dispatch({\r\n                    type: \"LIST_EMPLOYEES\",\r\n                    payload: data});\r\n            })\r\n            .catch(function(error) {\r\n                console.error(\"Error in fetching employees list\", error);\r\n            })\r\n    };\r\n};\r\n\r\nexport const fetchEmployeeJobHistory = (employeeId) => {\r\n    return async(dispatch) => {\r\n        await axios.get(Urls.FETCH_EMPLOYEE_JOB_HISTORY, employeeId)\r\n        .then(async res => {\r\n            const jobHistory = res.data;\r\n            await dispatch({\r\n                type: \"JOB_HISTORY_SUCCESS\",\r\n                payload: jobHistory\r\n            });\r\n        })\r\n        .catch(function(error) {\r\n            console.error(error);\r\n        })\r\n    }\r\n};","import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\r\nimport AddNewEmployeeForm from \"../modules/addEmployee/AddNewEmployeeForm\";\r\nimport EmployeesList from \"./EmployeesList\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    appBar: {\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        marginLeft: drawerWidth,\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    toolbar: theme.mixins.toolbar,\r\n    content: {\r\n        flexGrow: 1,\r\n        backgroundColor: theme.palette.background.default,\r\n        padding: theme.spacing(3),\r\n    },\r\n}));\r\n\r\nconst AppDrawer = () => {\r\n    const classes = useStyles();\r\n\r\n    let[selectedIndex, setSelectedIndex] = React.useState(0);\r\n\r\n    const onMenuItemClick = (index) => {\r\n        setSelectedIndex(index);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline />\r\n            <AppBar position=\"fixed\" className={classes.appBar}>\r\n                <Toolbar>\r\n                    <Typography variant=\"h6\" noWrap>\r\n                        elite HR System\r\n                    </Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Drawer\r\n                className={classes.drawer}\r\n                variant=\"permanent\"\r\n                classes={{\r\n                    paper: classes.drawerPaper,\r\n                }}\r\n                anchor=\"left\"\r\n            >\r\n                <div className={classes.toolbar} />\r\n                <Divider component=\"div\" />\r\n                <List>\r\n                    <ListItem button key=\"allEmployees\" onClick={() => onMenuItemClick(0)}>\r\n                        <ListItemIcon><PeopleIcon /></ListItemIcon>\r\n                        <ListItemText primary=\"All Employees\" />\r\n                    </ListItem>\r\n                </List>\r\n                <Divider />\r\n                <List>\r\n                    <ListItem button key=\"addEmployee\" onClick={() => onMenuItemClick(1)}>\r\n                        <ListItemIcon><PersonAddIcon /></ListItemIcon>\r\n                        <ListItemText primary=\"Add Employee\" />\r\n                    </ListItem>\r\n                </List>\r\n                <Divider />\r\n            </Drawer>\r\n            <main className={classes.content}>\r\n                <div className={classes.toolbar} />\r\n                {\r\n                    selectedIndex === 0 &&\r\n                    <EmployeesList />\r\n                }\r\n\r\n                {\r\n                    selectedIndex === 1 &&\r\n                    <AddNewEmployeeForm />\r\n                }\r\n            </main>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AppDrawer;","import React from 'react';\r\nimport './App.css';\r\nimport AppDrawer from \"./containers/AppDrawer\";\r\n\r\nfunction App() {\r\n  return (\r\n    <AppDrawer />\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const initialState = {\r\n    employees : [],\r\n    currentEmployee : {},\r\n    jobHistory : []\r\n};\r\n\r\nconst employeeReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case \"LIST_EMPLOYEES\":\r\n            return {\r\n                ...state,\r\n                employees: action.payload\r\n            };\r\n\r\n        case \"SET_CURRENT_EMPLOYEE\":\r\n            return {\r\n                ...state,\r\n                currentEmployee: action.payload\r\n            };\r\n\r\n        case \"DELETE_EMPLOYEE\":\r\n            return {\r\n              ...state,\r\n              employees: action.payload\r\n            };\r\n\r\n        case \"JOB_HISTORY_SUCCESS\":\r\n            return {\r\n              ...state,\r\n              jobHistory: action.payload  \r\n            };\r\n\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nexport default employeeReducer;","import {combineReducers} from \"redux\";\r\nimport { reducer as formReducer } from \"redux-form\";\r\nimport employeeReducer from \"./employeeReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    form: formReducer,\r\n    empReducer: employeeReducer\r\n});\r\n\r\nexport default rootReducer;","import rootReducer from \"./reducers/rootReducer\";\r\nimport thunk from 'redux-thunk';\r\nimport {applyMiddleware} from 'redux';\r\nimport {createStore} from \"redux\";\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunk));\r\n\r\nexport default store;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport {Provider} from 'react-redux';\r\nimport store from './store';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}