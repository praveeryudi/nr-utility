{"version":3,"sources":["ApiConstants.js","actions/maintenanceActions.js","containers/FlatLookup.js","components/TransactionsTable.js","util/DialogUtils.js","containers/TxnData.js","components/SelectFlat.js","components/SelectTxnDate.js","util/NumberFormatCustom.js","components/ActualPayment.js","components/ExpectedPayment.js","components/SaveTxnButton.js","components/PaymentMode.js","components/SelectMonth.js","components/SelectYear.js","components/TxnSnackbar.js","containers/NewTransactionForm.js","components/PendingMaintenance.js","components/AddMultipleTxn.js","containers/AppDrawer.js","App.js","reducers/employeeReducer.js","reducers/jobIdReducer.js","reducers/newEmployeeReducer.js","reducers/maintenanceReducer.js","reducers/rootReducer.js","store.js","serviceWorker.js","index.js"],"names":["host","LOAD_MAINTENANCE_MASTER_DATA","FETCH_ALL_TRANSACTIONS","DELETE_TRANSACTION","SAVE_MAINTENANCE_DATA","SAVE_MAINTENANCE_BATCH_DATA","PENDING_MAINTENANCE_DATA","fetchAllFlatData","dispatch","a","axios","get","Urls","then","res","data","type","payload","catch","error","console","connect","state","flatData","maintenanceReducer","lookup","props","useDispatch","useEffect","theme","createMuiTheme","overrides","MUIDataTableHeadCell","root","fontWeight","title","columns","name","label","options","filter","sort","filterType","responsive","rowsPerPage","jsonMode","selectableRows","fixedHeaderOptions","xAxis","yAxis","TransactionsTable","txnIdsToDelete","onRowsDelete","rowsDeleted","newData","i","length","idx","transactionId","dataIndex","txnId","push","onRowDelete","setCellProps","align","customBodyRender","value","toUpperCase","Alert","elevation","variant","ShowDeleteDialog","message","open","autoHideDuration","severity","TxnData","handleRemove","ids","removeTxn","this","fetchAllTransactions","className","txnResponse","infoMessage","transactions","Component","txnData","txnIds","delete","removeTransaction","useStyles","makeStyles","formControl","minWidth","SelectFlat","flatList","useSelector","classes","React","useState","flat","setFlat","FormControl","InputLabel","id","Select","labelId","onChange","event","preventDefault","target","flatSelected","handleFlatNumberChange","map","MenuItem","key","flatNumber","ownerName","SelectTxnDate","Date","selectedDate","setSelectedDate","utils","DateFnsUtils","required","disableToolbar","format","margin","date","txnDate","KeyboardButtonProps","NumberFormatCustom","inputRef","other","getInputRef","onValueChange","values","thousandSeparator","isNumericString","prefix","fixedMaintenance","flatLookup","expectedMaintenance","setValue","TextField","defaultValue","actualPayment","InputProps","inputComponent","fullWidth","disabled","button","marginTop","spacing","marginLeft","SaveTxnButton","Button","color","onClick","passAction","PaymentMode","component","FormLabel","RadioGroup","row","aria-label","paymentMode","handlePaymentModeChange","FormControlLabel","control","Radio","labelPlacement","SelectMonth","getMonth","month","setMonth","selectedMonth","SelectYear","getFullYear","year","setYear","selectedYear","width","TxnSnackbar","setOpen","handleClose","reason","onClose","appBar","position","layout","marginRight","breakpoints","up","paper","marginBottom","padding","buttons","display","justifyContent","txnResponseProp","saveAction","objToSave","txnObj","post","selectedFlat","setSelectedFlat","setTxnDate","setActualPayment","setPaymentMode","setSelectedMonth","setSelectedYear","submitTxn","log","Fragment","Typography","Grid","container","item","xs","sm","val","demo","backgroundColor","palette","background","red","getContrastText","height","gridPaper","flexGrow","pendingTxnData","pendingTxns","keys","Object","mapValues","result","Divider","justify","List","dense","Tooltip","placement","ListItem","ListItemAvatar","Avatar","charAt","ListItemText","primary","AddMultipleTxn","rows","handleAddRow","toLocaleString","setState","handleRemoveRow","newRows","Array","from","splice","handleChange","e","handleSaveAction","saveBatch","TableContainer","Paper","IconButton","Table","size","TableHead","TableRow","TableCell","style","TableBody","scope","txnArr","saveMaintenanceInBatch","drawer","flexShrink","drawerPaper","toolbar","mixins","content","default","AppDrawer","selectedIndex","setSelectedIndex","onMenuItemClick","index","CssBaseline","AppBar","Toolbar","noWrap","Drawer","anchor","ListItemIcon","App","initialState","employees","managers","currentEmployee","jobHistory","employeeReducer","action","jobs","selectedJobTitle","jobIdReducer","firstName","lastName","email","phoneNumber","hireDate","jobId","salary","commissionPct","managerId","departmentId","newEmployeeReducer","txnAmount","Map","defaultState","rootReducer","combineReducers","form","formReducer","empReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d99f4a15.chunk.js","sourcesContent":["const host = \"praveeryudi-org.cfapps.io\";\r\n//const host = \"localhost:1010\";\r\nconst protocol = \"https\";\r\n\r\nexport const FETCH_ALL_EMPLOYEES = `https://${host}/employees/all`;\r\nexport const FETCH_ALL_JOBS = `https://${host}/jobs/all`;\r\nexport const FETCH_ALL_MANAGERS = `https://${host}/managers/all`;\r\nexport const FETCH_EMPLOYEE_JOB_HISTORY = `https://${host}/api/fetch/employee/jobHistory/`;\r\n\r\nexport const LOAD_MAINTENANCE_MASTER_DATA = `${protocol}://${host}/maintenance/lookup`;\r\nexport const FETCH_ALL_TRANSACTIONS = `${protocol}://${host}/maintenance/transactions/all`;\r\nexport const DELETE_TRANSACTION = `${protocol}://${host}/maintenance/deleteTxn`;\r\n\r\nexport const FETCH_INDIVIDUAL_FLAT_DATA = `${protocol}://${host}/maintenance/flat/`;\r\nexport const SAVE_MAINTENANCE_DATA = `${protocol}://${host}/maintenance/addMaintenance`;\r\nexport const SAVE_MAINTENANCE_BATCH_DATA = `${protocol}://${host}/maintenance/addMaintenanceBatch`;\r\nexport const PENDING_MAINTENANCE_DATA = `${protocol}://${host}/maintenance/pending/`;","import axios from \"axios\";\r\nimport * as Urls from \"./../ApiConstants\";\r\n\r\nexport const fetchAllFlatData = () => {\r\n    return async(dispatch) => {\r\n        await axios.get(Urls.LOAD_MAINTENANCE_MASTER_DATA)\r\n            .then(async res => {\r\n                let data = res.data;\r\n                await dispatch({\r\n                    type: \"FLAT_LOOKUP\",\r\n                    payload: data});\r\n            })\r\n            .catch(function(error) {\r\n                console.error(\"Error in fetching flat look up data\", error);\r\n            })\r\n    };\r\n};\r\n\r\n/*export const fetchIndividualFlatData = (flatNumber) => {\r\n    return async(dispatch) => {\r\n        await axios.get(Urls.FETCH_INDIVIDUAL_FLAT_DATA + flatNumber)\r\n            .then(async res => {\r\n                let data = res.data;\r\n                await dispatch({\r\n                    type: \"INDIVIDUAL_FLAT_LOOKUP\",\r\n                    payload: data});\r\n            })\r\n            .catch(function(error) {\r\n                console.error(\"Error in fetching individual flat look up data\", error);\r\n            })\r\n    };\r\n};*/\r\n\r\nexport const saveMaintenance = (txnObj) => {\r\n    return async(dispatch) => {\r\n\r\n        await axios.post(Urls.SAVE_MAINTENANCE_DATA, txnObj)\r\n            .then(async res => {\r\n                let data = res.data;\r\n                await dispatch({\r\n                    type: \"SAVE_TRANSACTION\",\r\n                    payload: data});\r\n            })\r\n            .catch(function(error) {\r\n                console.error(\"Error in saving transaction\", error);\r\n            })\r\n    };\r\n};\r\n\r\nexport const saveMaintenanceInBatch = (txnArr) => {\r\n    return async(dispatch) => {\r\n\r\n        await axios.post(Urls.SAVE_MAINTENANCE_BATCH_DATA, txnArr)\r\n            .then(async res => {\r\n                let data = res.data;\r\n                await dispatch({\r\n                    type: \"SAVE_TRANSACTION\",\r\n                    payload: data});\r\n            })\r\n            .catch(function(error) {\r\n                console.error(\"Error in saving transaction batch\", error);\r\n            })\r\n    };\r\n};\r\n\r\nexport const fetchAllTransactions = () => {\r\n    return async(dispatch) => {\r\n        await axios.get(Urls.FETCH_ALL_TRANSACTIONS)\r\n            .then(async res => {\r\n                let data = res.data;\r\n                await dispatch({\r\n                    type: \"GET_ALL_TRANSACTIONS\",\r\n                    payload: data});\r\n            })\r\n            .catch(function(error) {\r\n                console.error(\"Error in fetching transactions\", error);\r\n            })\r\n    };\r\n};\r\n\r\nexport const removeTransaction = (txnIds) => {\r\n    return async(dispatch) => {\r\n        await axios.delete(Urls.DELETE_TRANSACTION, { data: txnIds })\r\n            .then(async res => {\r\n                /*const txnIndex = txnArr.findIndex(txn => txn.txnId === txnObj.txnId);\r\n                const updatedTxns = [\r\n                    ...txnArr.slice(0, txnIndex - 1),\r\n                    ...txnArr.slice(txnIndex + 1),\r\n                ];\r\n                await dispatch({\r\n                    type: \"UPDATE_TRANSACTIONS\",\r\n                    payload: updatedTxns});*/\r\n                const data = res.data;\r\n                await dispatch({\r\n                    type: \"DELETE_TRANSACTIONS\",\r\n                    payload: data});\r\n            })\r\n            .catch(function(error) {\r\n                console.error(\"Error in deleting transaction\", error);\r\n            })\r\n    };\r\n};\r\n\r\nexport const pendingMaintenanceData = (month, year) => {\r\n    return async(dispatch) => {\r\n        await axios.get(Urls.PENDING_MAINTENANCE_DATA + month + \"/\" + year)\r\n            .then(async res => {\r\n                const result = res.data;\r\n                await dispatch({\r\n                    type: \"PENDING_TRANSACTIONS\",\r\n                    payload: result});\r\n            })\r\n            .catch(function(error) {\r\n                console.error(\"Error in fetching pending transactions\", error);\r\n            })\r\n    };\r\n};","import React, {useEffect} from 'react';\r\nimport {connect, useDispatch} from 'react-redux';\r\nimport {fetchAllFlatData} from '../actions/maintenanceActions';\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport {createMuiTheme, MuiThemeProvider} from '@material-ui/core/styles';\r\n\r\nconst FlatLookup = (props) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchAllFlatData());\r\n    }, [dispatch]);\r\n\r\n    const getMuiTheme = () => createMuiTheme({\r\n        overrides: {\r\n\r\n            MUIDataTableHeadCell: {\r\n                root: {\r\n                    fontWeight: 'bold',\r\n                },\r\n            },\r\n        }\r\n    });\r\n\r\n    const data = props.flatData;\r\n    const columns = [\r\n        {\r\n            name: \"flatNumber\",\r\n            label: \"Flat Number\",\r\n            options: {\r\n                filter: true,\r\n                sort: true\r\n            }\r\n        },\r\n        {\r\n            name: \"ownerName\",\r\n            label: \"Owner Name\",\r\n            options: {\r\n                filter: true,\r\n                sort: true,\r\n            }\r\n        },\r\n        {\r\n            name: \"expectedMaintenance\",\r\n            label: \"Fixed Maintenance\",\r\n            options: {\r\n                filter: true,\r\n                sort: true,\r\n            }\r\n        },\r\n    ];\r\n\r\n    const options = {\r\n        filter: true,\r\n        filterType: 'dropdown',\r\n        responsive: 'scrollMaxHeight',\r\n        rowsPerPage: 15,\r\n        jsonMode: true,\r\n        selectableRows: 'none',\r\n        fixedHeaderOptions: {\r\n            xAxis: false,\r\n            yAxis: true\r\n        },\r\n    };\r\n\r\n    return (\r\n        <MuiThemeProvider theme={getMuiTheme()}>\r\n        <MUIDataTable\r\n            title={\"Flats List\"}\r\n            data={data}\r\n            columns={columns}\r\n            options={options}\r\n        />\r\n        </MuiThemeProvider>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    flatData: state.maintenanceReducer.lookup,\r\n});\r\n\r\nexport default connect(mapStateToProps, null)(FlatLookup);","import React from 'react';\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport {createMuiTheme, MuiThemeProvider} from '@material-ui/core/styles';\r\nimport CustomToolbarSelect from \"./CustomToolbarSelect\";\r\n\r\n/*const row = (x, i, header, handleRemove) => (\r\n    <TableRow key={`tr-${i}`} selectable={false}>\r\n        {header.map((y,k) => (\r\n            <TableRowColumn key={`trc-${k}`}>{x[y.prop]}</TableRowColumn>\r\n        ))}\r\n        <TableRowColumn>\r\n            <DeleteForeverIcon onClick={() => handleRemove(i)} />\r\n        </TableRowColumn>\r\n    </TableRow>\r\n);*/\r\n\r\nconst TransactionsTable = ({ data, txnIdsToDelete }) => {\r\n\r\n    const getMuiTheme = () => createMuiTheme({\r\n        overrides: {\r\n\r\n            MUIDataTableHeadCell: {\r\n                root: {\r\n                    fontWeight: 'bold',\r\n                },\r\n            },\r\n        }\r\n    });\r\n\r\n    const columns = [\r\n        {\r\n            name: \"flatNumber\",\r\n            label: \"Flat Number\",\r\n            options: {\r\n                filter: true,\r\n                sort: true\r\n            }\r\n        },\r\n        {\r\n            name: \"txnDate\",\r\n            label: \"Paid On\",\r\n            options: {\r\n                filter: false,\r\n                sort: true,\r\n            }\r\n        },\r\n        {\r\n            name: \"month\",\r\n            label: \"Month\",\r\n            options: {\r\n                filter: true,\r\n                sort: true,\r\n            }\r\n        },\r\n        {\r\n            name: \"year\",\r\n            label: \"Year\",\r\n            options: {\r\n                filter: true,\r\n                sort: true,\r\n            }\r\n        },\r\n        {\r\n            name: \"actualPayment\",\r\n            label: \"Amount Paid\",\r\n            options: {\r\n                filter: false,\r\n                sort: true,\r\n            }\r\n        },\r\n        {\r\n            name: \"paymentMode\",\r\n            label: \"Payment Mode\",\r\n            options: {\r\n                filter: true,\r\n                sort: true,\r\n                setCellProps: () => ({ align: 'left' }),\r\n                customBodyRender: (value) => {\r\n                    return value.toUpperCase();\r\n                },\r\n            }\r\n        },\r\n        {\r\n            name: \"balance\",\r\n            label: \"Balance\",\r\n            options: {\r\n                filter: false,\r\n                sort: true,\r\n                setCellProps: () => ({ align: 'center' }),\r\n            }\r\n        },\r\n    ];\r\n\r\n    const onRowDelete = (rowsDeleted) => {\r\n        //console.log(rowsDeleted.data);\r\n        let newData = [];\r\n        for(let i = 0; i < rowsDeleted.data.length; i++){\r\n            let idx = rowsDeleted.data[i];\r\n            let transactionId = data[idx.dataIndex].txnId;\r\n            //console.log(\"Data Ob\", transactionId);\r\n            newData.push(transactionId);\r\n        }\r\n        //console.log(\"New Data :: \", newData);\r\n        txnIdsToDelete(newData);\r\n    };\r\n\r\n    const options = {\r\n        filter: true,\r\n        filterType: 'checkbox',\r\n        onRowsDelete: (rowsDeleted) => onRowDelete(rowsDeleted),\r\n        responsive: 'scrollMaxHeight',\r\n        rowsPerPage: 15,\r\n        jsonMode: true,\r\n        selectableRows: true,\r\n        fixedHeaderOptions: {\r\n            xAxis: false,\r\n            yAxis: true\r\n        },\r\n    };\r\n\r\n    return (\r\n        <MuiThemeProvider theme={getMuiTheme()}>\r\n        <MUIDataTable\r\n            title={\"Transactions\"}\r\n            data={data}\r\n            columns={columns}\r\n            options={options}\r\n        />\r\n        </MuiThemeProvider>\r\n\r\n        /*<Table>\r\n            <TableHeader>\r\n                <TableRow>\r\n                    {header.map((x, i) => (\r\n                        <TableHeaderColumn key={`thc-${i}`}>{x.name}</TableHeaderColumn>\r\n                    ))}\r\n                    <TableHeaderColumn />\r\n                    <TableHeaderColumn />\r\n                </TableRow>\r\n            </TableHeader>\r\n            <TableBody>\r\n                {data.map((x, i) =>\r\n                    row(\r\n                        x,\r\n                        i,\r\n                        header,\r\n                        handleRemove\r\n                    )\r\n                )}\r\n            </TableBody>\r\n        </Table>*/\r\n    );\r\n};\r\n\r\nexport default TransactionsTable;","import Snackbar from \"@material-ui/core/Snackbar/Snackbar\";\r\nimport React from \"react\";\r\nimport MuiAlert from \"@material-ui/lab/Alert/Alert\";\r\n\r\nfunction Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nexport const ShowDeleteDialog = ({ message }) => {\r\n    return (\r\n        <Snackbar open={true} autoHideDuration={5000}>\r\n            <Alert severity=\"info\">\r\n                {message}\r\n            </Alert>\r\n        </Snackbar>\r\n    )\r\n};","import React, {Component} from \"react\";\r\nimport MuiThemeProvider from \"material-ui/styles/MuiThemeProvider\";\r\nimport TransactionsTable from \".././components/TransactionsTable\";\r\nimport {connect} from 'react-redux';\r\nimport {fetchAllTransactions, removeTransaction} from '../actions/maintenanceActions';\r\nimport {ShowDeleteDialog} from \"../util/DialogUtils\";\r\n//import injectTapEventPlugin from \"react-tap-event-plugin\";\r\n\r\n//injectTapEventPlugin();\r\n\r\nclass TxnData extends Component {\r\n\r\n    handleRemove = ids => {\r\n        this.props.removeTxn(ids);\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.props.fetchAllTransactions();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <MuiThemeProvider>\r\n                <div className=\"App\">\r\n                    {this.props.txnResponse && <ShowDeleteDialog message={this.props.txnResponse.infoMessage}/>}\r\n                    <TransactionsTable\r\n                        data={this.props.transactions}\r\n                        txnIdsToDelete={(ids) => this.handleRemove(ids)}\r\n                    />\r\n                </div>\r\n            </MuiThemeProvider>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    transactions: state.maintenanceReducer.txnData,\r\n    txnResponse: state.maintenanceReducer.txnResponse,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    fetchAllTransactions: () => dispatch(fetchAllTransactions()),\r\n    removeTxn: (txnIds) => dispatch(removeTransaction(txnIds)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TxnData);","import {makeStyles} from '@material-ui/core/styles';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport React, {useEffect} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {fetchAllFlatData} from \"../actions/maintenanceActions.js\";\r\nimport {fetchIndividualFlatData} from \"../actions/maintenanceActions\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    formControl: {\r\n        minWidth: 242,\r\n    }\r\n}));\r\n\r\nexport default function SelectFlat(props) {\r\n\r\n    const dispatch = useDispatch();\r\n    let flatList = useSelector(state => state.maintenanceReducer.lookup);\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchAllFlatData());\r\n    }, [dispatch]);\r\n\r\n    const classes = useStyles();\r\n    let[flat, setFlat] = React.useState('');\r\n\r\n    const handleFlatNumberChange = (event) => {\r\n        event.preventDefault();\r\n        //console.log(\"FlatData = \", event.target.value);\r\n        setFlat(event.target.value);\r\n        props.flatSelected(event.target.value);\r\n        //dispatch(fetchIndividualFlatData(event.target.value));\r\n    };\r\n\r\n    return (\r\n        <FormControl className={classes.formControl}>\r\n        <InputLabel id=\"flat-label\">Flat Number</InputLabel>\r\n        <Select\r\n            labelId=\"flat-label\"\r\n            id=\"flat-label\"\r\n            value={flat}\r\n            onChange={(event) => handleFlatNumberChange(event)}\r\n        >\r\n            {\r\n                flatList.map((flat) =>\r\n                    <MenuItem key={flat.flatNumber} value={flat}>\r\n                        {flat.flatNumber} {flat.ownerName}\r\n                    </MenuItem>)\r\n            }\r\n        </Select>\r\n        </FormControl>\r\n    )\r\n};","import React from 'react';\r\nimport {useDispatch} from \"react-redux\";\r\nimport 'date-fns';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {KeyboardDatePicker, MuiPickersUtilsProvider} from '@material-ui/pickers';\r\n\r\nexport default function SelectTxnDate(props) {\r\n\r\n    const [selectedDate, setSelectedDate] = React.useState(new Date());\r\n\r\n    //const dispatch = useDispatch();\r\n\r\n    const handleDateChange = date => {\r\n        setSelectedDate(date);\r\n        props.txnDate(date);\r\n      /*  dispatch({\r\n            type: \"SET_TXN_DATE\",\r\n            payload: date\r\n        });*/\r\n    };\r\n\r\n    return (\r\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n            <KeyboardDatePicker\r\n                required\r\n                disableToolbar\r\n                variant=\"inline\"\r\n                format=\"MM/dd/yyyy\"\r\n                margin=\"normal\"\r\n                id=\"txnDate\"\r\n                value={selectedDate}\r\n                onChange={handleDateChange}\r\n                label=\"Transaction Date\"\r\n                KeyboardButtonProps={{\r\n                    'aria-label': 'change date',\r\n                }}\r\n            />\r\n        </MuiPickersUtilsProvider>\r\n    )\r\n};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport NumberFormat from 'react-number-format';\r\n\r\nexport default function NumberFormatCustom(props) {\r\n    const { inputRef, onChange, ...other } = props;\r\n\r\n    return (\r\n        <NumberFormat\r\n            {...other}\r\n            getInputRef={inputRef}\r\n            onValueChange={values => {\r\n                onChange({\r\n                    target: {\r\n                        value: values.value,\r\n                    },\r\n                });\r\n            }}\r\n            thousandSeparator\r\n            isNumericString\r\n            prefix=\"₹\"\r\n        />\r\n    );\r\n}\r\n\r\nNumberFormatCustom.propTypes = {\r\n    inputRef: PropTypes.func.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n};","import NumberFormatCustom from \".././util/NumberFormatCustom\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport React from \"react\";\r\nimport {connect, useDispatch} from \"react-redux\";\r\n\r\nconst ActualPayment = (props) => {\r\n\r\n    const [value, setValue] = React.useState(props.fixedMaintenance);\r\n\r\n    //const dispatch = useDispatch();\r\n\r\n    const handleAmountChange = name => event => {\r\n        setValue(event.target.value);\r\n        /*dispatch({\r\n            type: \"SET_TXN_AMOUNT\",\r\n            payload: event.target.value\r\n        });*/\r\n        props.actualPayment(event.target.value);\r\n    };\r\n\r\n    return (\r\n        <TextField\r\n            required\r\n            id=\"actualPayment\"\r\n            defaultValue={value === 0 ? 0 : props.fixedMaintenance}\r\n            value={value === 0 ? props.fixedMaintenance : value}\r\n            onChange={handleAmountChange('numberformat')}\r\n            InputProps={{\r\n                inputComponent: NumberFormatCustom,\r\n            }}\r\n            label=\"Actual Payment\"\r\n            fullWidth\r\n        />\r\n    )\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    fixedMaintenance: null === state.maintenanceReducer.flatLookup ? 0 : state.maintenanceReducer.flatLookup.expectedMaintenance\r\n});\r\n\r\nexport default connect(mapStateToProps, null)(ActualPayment);","import TextField from \"@material-ui/core/TextField\";\r\nimport React from \"react\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst ExpectedPayment = (props) => {\r\n\r\n    return (\r\n        <TextField\r\n            disabled\r\n            value={props.fixedMaintenance}\r\n            id=\"expectedPayment\"\r\n            label=\"Expected Payment\"\r\n        />\r\n    )\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    fixedMaintenance: null === state.maintenanceReducer.flatLookup ? 0 : state.maintenanceReducer.flatLookup.expectedMaintenance\r\n});\r\n\r\nexport default connect(mapStateToProps, null)(ExpectedPayment);","import React from 'react';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    button: {\r\n        marginTop: theme.spacing(3),\r\n        marginLeft: theme.spacing(1),\r\n    },\r\n}));\r\n\r\n\r\nconst SaveTxnButton = (props) => {\r\n\r\n    const classes = useStyles();\r\n\r\n    const saveTxn = () => {\r\n        props.passAction();\r\n    };\r\n\r\n    return (\r\n        <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={saveTxn}\r\n            className={classes.button}\r\n        >\r\n            Save\r\n        </Button>\r\n    )\r\n};\r\n\r\nexport default SaveTxnButton;","import React from \"react\";\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        marginTop: theme.spacing(10),\r\n    },\r\n}));\r\n\r\nexport default function PaymentMode(props) {\r\n\r\n    const classes = useStyles();\r\n\r\n    const handlePaymentModeChange = (event) => {\r\n        event.preventDefault();\r\n        props.paymentMode(event.target.value);\r\n    };\r\n\r\n    return (\r\n        <FormControl component=\"fieldset\" className={classes.formControl}>\r\n            <FormLabel component=\"legend\">Mode of Payment</FormLabel>\r\n            <RadioGroup row aria-label=\"position\" name=\"position\" defaultValue=\"top\"\r\n                        onChange={(event) => handlePaymentModeChange(event)}>\r\n                <FormControlLabel\r\n                    value=\"online\"\r\n                    control={<Radio color=\"primary\" />}\r\n                    label=\"Online\"\r\n                    labelPlacement=\"start\"\r\n                />\r\n                <FormControlLabel\r\n                    value=\"cash\"\r\n                    control={<Radio color=\"secondary\" />}\r\n                    label=\"Cash\"\r\n                    labelPlacement=\"start\"\r\n                />\r\n            </RadioGroup>\r\n        </FormControl>\r\n    );\r\n}","import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        minWidth: 120,\r\n        marginTop: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nexport default function SelectMonth(props) {\r\n    const classes = useStyles();\r\n    const [month, setMonth] = React.useState(new Date().getMonth());\r\n\r\n    const handleChange = (event) => {\r\n        event.preventDefault();\r\n        setMonth(event.target.value);\r\n        props.selectedMonth(event.target.value);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <FormControl className={classes.formControl}>\r\n                <InputLabel id=\"demo-simple-select-label\">Month</InputLabel>\r\n                <Select\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    value={month}\r\n                    onChange={handleChange}\r\n                >\r\n                    <MenuItem value={0}>JAN</MenuItem>\r\n                    <MenuItem value={1}>FEB</MenuItem>\r\n                    <MenuItem value={2}>MAR</MenuItem>\r\n                    <MenuItem value={3}>APR</MenuItem>\r\n                    <MenuItem value={4}>MAY</MenuItem>\r\n                    <MenuItem value={5}>JUN</MenuItem>\r\n                    <MenuItem value={6}>JUL</MenuItem>\r\n                    <MenuItem value={7}>AUG</MenuItem>\r\n                    <MenuItem value={8}>SEP</MenuItem>\r\n                    <MenuItem value={9}>OCT</MenuItem>\r\n                    <MenuItem value={10}>NOV</MenuItem>\r\n                    <MenuItem value={11}>DEC</MenuItem>\r\n                </Select>\r\n            </FormControl>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        minWidth: 120,\r\n        marginTop: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nexport default function SelectYear(props) {\r\n    const classes = useStyles();\r\n    const [year, setYear] = React.useState(new Date().getFullYear());\r\n\r\n    const handleChange = (event) => {\r\n        event.preventDefault();\r\n        setYear(event.target.value);\r\n        props.selectedYear(event.target.value);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <FormControl className={classes.formControl}>\r\n                <InputLabel id=\"year-select-label\">Year</InputLabel>\r\n                <Select\r\n                    labelId=\"year-select-label\"\r\n                    id=\"year-select\"\r\n                    value={year}\r\n                    onChange={handleChange}\r\n                >\r\n                    <MenuItem value={2020}>2020</MenuItem>\r\n                    <MenuItem value={2021}>2021</MenuItem>\r\n                    <MenuItem value={2022}>2022</MenuItem>\r\n                </Select>\r\n            </FormControl>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\n\r\nfunction Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        '& > * + *': {\r\n            marginTop: theme.spacing(2),\r\n        },\r\n    },\r\n}));\r\n\r\nconst TxnSnackbar = (props) => {\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(true);\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n\r\n            <Snackbar open={open} autoHideDuration={5000} onClose={handleClose}>\r\n                <Alert onClose={handleClose} severity=\"info\">\r\n                    {props.message}\r\n                </Alert>\r\n            </Snackbar>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TxnSnackbar;","import React, {useState} from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport SelectFlat from \"../components/SelectFlat\";\r\nimport SelectTxnDate from \"../components/SelectTxnDate\";\r\nimport ActualPayment from \"../components/ActualPayment\";\r\nimport ExpectedPayment from \"../components/ExpectedPayment\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline/CssBaseline\";\r\nimport Paper from \"@material-ui/core/Paper/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport SaveTxnButton from \"../components/SaveTxnButton\";\r\nimport PaymentMode from \"../components/PaymentMode\";\r\nimport SelectMonth from \"../components/SelectMonth\";\r\nimport SelectYear from \"../components/SelectYear\";\r\nimport {fetchIndividualFlatData, saveMaintenance} from \"../actions/maintenanceActions\";\r\nimport {connect, useDispatch, useSelector} from \"react-redux\";\r\nimport TxnSnackbar from \"../components/TxnSnackbar\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    appBar: {\r\n        position: 'relative',\r\n    },\r\n    layout: {\r\n        width: 'auto',\r\n        marginLeft: theme.spacing(2),\r\n        marginRight: theme.spacing(2),\r\n        [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\r\n            width: 800,\r\n            marginLeft: 'auto',\r\n            marginRight: 'auto',\r\n        },\r\n    },\r\n    paper: {\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(3),\r\n        padding: theme.spacing(2),\r\n        [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\r\n            marginTop: theme.spacing(2),\r\n            marginBottom: theme.spacing(6),\r\n            padding: theme.spacing(3),\r\n        },\r\n    },\r\n    buttons: {\r\n        display: 'flex',\r\n        justifyContent: 'flex-end',\r\n    },\r\n}));\r\n\r\n\r\nconst NewTransactionForm = (props) => {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n\r\n    const[selectedFlat, setSelectedFlat] = useState({});\r\n    const[txnDate, setTxnDate] = useState(new Date());\r\n    let[actualPayment, setActualPayment] = useState(0);\r\n    const[paymentMode, setPaymentMode] = useState('online');\r\n    const [selectedMonth, setSelectedMonth] = useState(new Date().getMonth());\r\n    const[selectedYear, setSelectedYear] = useState(new Date().getFullYear());\r\n    const {txnResponseProp} = props;\r\n\r\n    const submitTxn = async () => {\r\n        const {flatNumber} = selectedFlat;\r\n        const {expectedMaintenance} = selectedFlat;\r\n        actualPayment = actualPayment === 0 ? expectedMaintenance : actualPayment;\r\n        let objToSave = {\r\n            flatNumber,\r\n            expectedMaintenance,\r\n            actualPayment,\r\n            txnDate,\r\n            selectedMonth,\r\n            selectedYear,\r\n            paymentMode\r\n        };\r\n        console.log(objToSave);\r\n        await props.saveAction(objToSave);\r\n    };\r\n\r\n    return (\r\n\r\n        <React.Fragment>\r\n            <CssBaseline />\r\n            <main className={classes.layout}>\r\n                <Paper className={classes.paper}>\r\n                    <Typography component=\"h1\" variant=\"h5\" align=\"center\">\r\n                        Add Maintenance\r\n                    </Typography>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={12} sm={4}>\r\n                            <SelectFlat flatSelected={val => {\r\n                                setSelectedFlat(val);\r\n                                dispatch({\r\n                                    type: \"INDIVIDUAL_FLAT_LOOKUP\",\r\n                                    payload: val\r\n                                })\r\n                            }}/>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12} sm={4}>\r\n                            <ExpectedPayment />\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12} sm={4}>\r\n                            <ActualPayment actualPayment={val => {\r\n                                setActualPayment(val);\r\n                                dispatch({\r\n                                    type: \"SET_TXN_AMOUNT\",\r\n                                    payload: val\r\n                                })\r\n                            }}/>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12} sm={4}>\r\n                            <SelectTxnDate txnDate={val => {\r\n                                setTxnDate(val);\r\n                                dispatch({\r\n                                    type: \"SET_TXN_DATE\",\r\n                                    payload: val\r\n                                })\r\n                            }}/>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12} sm={4}>\r\n                            <SelectMonth selectedMonth={val => {\r\n                                setSelectedMonth(val);\r\n                                dispatch({\r\n                                    type: \"SET_MONTH\",\r\n                                    payload: val\r\n                                })\r\n                            }}/>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12} sm={4}>\r\n                            <SelectYear selectedYear={val => {\r\n                                setSelectedYear(val);\r\n                                dispatch({\r\n                                    type: \"SET_YEAR\",\r\n                                    payload: val\r\n                                })\r\n                            }}/>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12} sm={6}>\r\n                            <PaymentMode paymentMode={val => {\r\n                                setPaymentMode(val);\r\n                                dispatch({\r\n                                    type: \"SET_PAYMENT_MODE\",\r\n                                    payload: val\r\n                                })\r\n                            }} />\r\n                        </Grid>\r\n\r\n\r\n                    </Grid>\r\n                    <React.Fragment>\r\n                        <div className={classes.buttons}>\r\n                            <SaveTxnButton passAction={() => submitTxn()}/>\r\n                        </div>\r\n                    </React.Fragment>\r\n                </Paper>\r\n            </main>\r\n            {txnResponseProp && <TxnSnackbar message={txnResponseProp.infoMessage}/>}\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    txnResponseProp: state.maintenanceReducer.txnResponse,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    saveAction: (objToSave) => dispatch(saveMaintenance(objToSave)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NewTransactionForm);","import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport {connect, useDispatch} from \"react-redux\";\r\nimport Divider from '@material-ui/core/Divider';\r\nimport CssBaseline from \"@material-ui/core/CssBaseline/CssBaseline\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport SelectMonth from \"./SelectMonth\";\r\nimport SelectYear from \"./SelectYear\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {pendingMaintenanceData} from \"../actions/maintenanceActions\";\r\n\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport FolderIcon from '@material-ui/icons/Folder';\r\nimport {red} from '@material-ui/core/colors';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    appBar: {\r\n        position: 'relative',\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n    title: {\r\n        margin: theme.spacing(4, 0, 2),\r\n    },\r\n    red: {\r\n        color: theme.palette.getContrastText(red[500]),\r\n        backgroundColor: red[500],\r\n        width: theme.spacing(5),\r\n        height: theme.spacing(5),\r\n    },\r\n    layout: {\r\n        width: 'auto',\r\n        marginLeft: theme.spacing(2),\r\n        marginRight: theme.spacing(2),\r\n        [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\r\n            width: 600,\r\n            marginLeft: 'auto',\r\n            marginRight: 'auto',\r\n        },\r\n    },\r\n    paper: {\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(3),\r\n        padding: theme.spacing(2),\r\n        [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\r\n            marginTop: theme.spacing(2),\r\n            marginBottom: theme.spacing(6),\r\n            padding: theme.spacing(3),\r\n        },\r\n    },\r\n    gridPaper: {\r\n        height: 325,\r\n        width: 100,\r\n    },\r\n    buttons: {\r\n        display: 'flex',\r\n        justifyContent: 'flex-end',\r\n    },\r\n    button: {\r\n        marginTop: theme.spacing(3),\r\n        marginLeft: theme.spacing(1),\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nconst PendingMaintenance = (props) => {\r\n    const classes = useStyles();\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [selectedMonth, setSelectedMonth] = React.useState(new Date().getMonth());\r\n    const [selectedYear, setSelectedYear] = React.useState(new Date().getFullYear());\r\n\r\n    const fetchPendingTxns = (event) => {\r\n        event.preventDefault();\r\n        console.log(selectedMonth, selectedYear);\r\n        dispatch(pendingMaintenanceData(selectedMonth + 1, selectedYear));\r\n    };\r\n\r\n    const keys = Object.keys(props.pendingTxnData);\r\n    const mapValues = Object.values(props.pendingTxnData);\r\n\r\n    return (\r\n        <div>\r\n            <React.Fragment>\r\n                <CssBaseline />\r\n                <main className={classes.layout}>\r\n                    <Paper className={classes.paper}>\r\n                        <Typography component=\"h1\" variant=\"h5\" align=\"center\">\r\n                            Pending Maintenance\r\n                        </Typography>\r\n                        <Grid container spacing={2}>\r\n                            <Grid item xs={12} sm={6}>\r\n                                <SelectMonth selectedMonth={val => {\r\n                                    setSelectedMonth(val);\r\n                                }}/>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6}>\r\n                                <SelectYear selectedYear={val => {\r\n                                    setSelectedYear(val);\r\n                                }}/>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <React.Fragment>\r\n                            <div className={classes.buttons}>\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    onClick={fetchPendingTxns}\r\n                                    className={classes.button}\r\n                                >\r\n                                    Fetch\r\n                                </Button>\r\n                            </div>\r\n                        </React.Fragment>\r\n                    </Paper>\r\n                </main>\r\n            </React.Fragment>\r\n            <Divider />\r\n            <Grid container className={classes.root} spacing={2}>\r\n                <Grid item xs={12}>\r\n                    <Grid container justify=\"center\" spacing={10}>\r\n                        <Grid key={keys[0]} item>\r\n                            <Typography variant=\"h6\" className={classes.title}>\r\n                                Ground Floor\r\n                            </Typography>\r\n                            <div className={classes.demo}>\r\n                                <List dense={true}>\r\n                                    {\r\n                                        mapValues[keys[0]] && mapValues[keys[0]].map((flat)=> <Tooltip title={flat.ownerName} placement=\"left-start\">\r\n                                            <ListItem>\r\n                                                <ListItemAvatar>\r\n                                                    <Avatar className={classes.red} variant=\"rounded\">\r\n                                                        {flat.ownerName.charAt(0)}\r\n                                                    </Avatar>\r\n                                                </ListItemAvatar>\r\n                                                <ListItemText\r\n                                                    primary={flat.flatNumber}\r\n                                                />\r\n                                            </ListItem>\r\n                                        </Tooltip>)\r\n                                    }\r\n                                </List>\r\n                            </div>\r\n                        </Grid>\r\n\r\n                        <Grid key={keys[1]} item>\r\n                            <Typography variant=\"h6\" className={classes.title}>\r\n                                1st Floor\r\n                            </Typography>\r\n                            <div className={classes.demo}>\r\n                                <List dense={true}>\r\n                                    {\r\n                                        mapValues[keys[1]] && mapValues[keys[1]].map((flat)=> <Tooltip title={flat.ownerName} placement=\"left-start\">\r\n                                            <ListItem>\r\n                                                <ListItemAvatar>\r\n                                                    <Avatar className={classes.red} variant=\"rounded\">\r\n                                                        {flat.ownerName.charAt(0)}\r\n                                                    </Avatar>\r\n                                                </ListItemAvatar>\r\n                                                <ListItemText\r\n                                                    primary={flat.flatNumber}\r\n                                                />\r\n                                        </ListItem>\r\n                                        </Tooltip>)\r\n                                    }\r\n                                </List>\r\n                            </div>\r\n                        </Grid>\r\n\r\n                        <Grid key={keys[2]} item>\r\n                            <Typography variant=\"h6\" className={classes.title}>\r\n                                2nd Floor\r\n                            </Typography>\r\n                            <div className={classes.demo}>\r\n                                <List dense={true}>\r\n                                    {\r\n                                        mapValues[keys[2]] && mapValues[keys[2]].map((flat)=> <Tooltip title={flat.ownerName} placement=\"left-start\">\r\n                                            <ListItem>\r\n                                                <ListItemAvatar>\r\n                                                    <Avatar className={classes.red} variant=\"rounded\">\r\n                                                        {flat.ownerName.charAt(0)}\r\n                                                    </Avatar>\r\n                                                </ListItemAvatar>\r\n                                                <ListItemText\r\n                                                    primary={flat.flatNumber}\r\n                                                />\r\n                                            </ListItem>\r\n                                        </Tooltip>)\r\n                                    }\r\n                                </List>\r\n                            </div>\r\n                        </Grid>\r\n\r\n                        <Grid key={keys[3]} item>\r\n                            <Typography variant=\"h6\" className={classes.title}>\r\n                                3rd Floor\r\n                            </Typography>\r\n                            <div className={classes.demo}>\r\n                                <List dense={true}>\r\n                                    {\r\n                                        mapValues[keys[3]] && mapValues[keys[3]].map((flat)=> <Tooltip title={flat.ownerName} placement=\"left-start\">\r\n                                            <ListItem>\r\n                                                <ListItemAvatar>\r\n                                                    <Avatar className={classes.red} variant=\"rounded\">\r\n                                                        {flat.ownerName.charAt(0)}\r\n                                                    </Avatar>\r\n                                                </ListItemAvatar>\r\n                                                <ListItemText\r\n                                                    primary={flat.flatNumber}\r\n                                                />\r\n                                            </ListItem>\r\n                                        </Tooltip>)\r\n                                    }\r\n                                </List>\r\n                            </div>\r\n                        </Grid>\r\n\r\n                        <Grid key={keys[4]} item>\r\n                            <Typography variant=\"h6\" className={classes.title}>\r\n                                4th Floor\r\n                            </Typography>\r\n                            <div className={classes.demo}>\r\n                                <List dense={true}>\r\n                                    {\r\n                                        mapValues[keys[4]] && mapValues[keys[4]].map((flat)=> <Tooltip title={flat.ownerName} placement=\"left-start\">\r\n                                            <ListItem>\r\n                                                <ListItemAvatar>\r\n                                                    <Avatar className={classes.red} variant=\"rounded\">\r\n                                                        {flat.ownerName.charAt(0)}\r\n                                                    </Avatar>\r\n                                                </ListItemAvatar>\r\n                                                <ListItemText\r\n                                                    primary={flat.flatNumber}\r\n                                                />\r\n                                            </ListItem>\r\n                                        </Tooltip>)\r\n                                    }\r\n                                </List>\r\n                            </div>\r\n                        </Grid>\r\n\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    pendingTxnData: state.maintenanceReducer.pendingTxns,\r\n});\r\n\r\nexport default connect(mapStateToProps, null)(PendingMaintenance);","import React, {Component} from 'react';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport AddBoxIcon from '@material-ui/icons/AddBox';\r\nimport SaveOutlinedIcon from '@material-ui/icons/SaveOutlined';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport Tooltip from \"@material-ui/core/Tooltip/Tooltip\";\r\nimport {saveMaintenanceInBatch} from \"../actions/maintenanceActions\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n\r\n    layout: {\r\n        width: 'auto',\r\n        marginLeft: theme.spacing(2),\r\n        marginRight: theme.spacing(2),\r\n        [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\r\n            width: 800,\r\n            marginLeft: 'auto',\r\n            marginRight: 'auto',\r\n        },\r\n    },\r\n    paper: {\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(3),\r\n        padding: theme.spacing(2),\r\n        [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\r\n            marginTop: theme.spacing(2),\r\n            marginBottom: theme.spacing(6),\r\n            padding: theme.spacing(3),\r\n        },\r\n    },\r\n}));\r\n\r\nclass AddMultipleTxn extends Component {\r\n\r\n    state = {\r\n        rows: []\r\n    };\r\n\r\n    handleAddRow = () => {\r\n        const item = {\r\n            flatNumber: '',\r\n            txnDate: new Date(),\r\n            selectedMonth: new Date().toLocaleString('default', { month: 'long' }),\r\n            selectedYear: new Date().getFullYear(),\r\n            actualPayment: '',\r\n            paymentMode: ''\r\n        };\r\n        this.setState({\r\n            rows: [...this.state.rows, item]\r\n        });\r\n    };\r\n\r\n    handleRemoveRow = (idx) => {\r\n        console.log(idx);\r\n        let newRows = Array.from(this.state.rows);\r\n        if (idx > -1) {\r\n            newRows.splice(idx, 1);\r\n        }\r\n        this.setState({\r\n            rows: newRows\r\n        });\r\n    };\r\n\r\n    handleChange = idx => e => {\r\n        const { name, value } = e.target;\r\n        const rows = [...this.state.rows];\r\n        rows[idx] = {...rows[idx],\r\n            [name]: value\r\n        };\r\n        this.setState({\r\n            rows\r\n        });\r\n    };\r\n\r\n    handleSaveAction = () => {\r\n        console.log(this.state.rows);\r\n        this.props.saveBatch(this.state.rows);\r\n    };\r\n\r\n    render() {\r\n        const classes = useStyles;\r\n        return (\r\n            <main className={classes.layout}>\r\n                <Paper className={classes.paper}>\r\n                    <Typography component=\"h1\" variant=\"h5\" align=\"center\">\r\n                        Add Maintenance\r\n                    </Typography>\r\n                    <TableContainer component={Paper}>\r\n                        <Tooltip title=\"Add Entry\" placement=\"top\">\r\n                            <IconButton aria-label=\"add\"\r\n                                        onClick={this.handleAddRow}>\r\n                                <AddBoxIcon />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                        <Tooltip title=\"Save\" placement=\"top\">\r\n                            <span>\r\n                                <IconButton aria-label=\"save\"\r\n                                            disabled={this.state.rows.length === 0}\r\n                                            onClick={this.handleSaveAction}>\r\n                                    <SaveOutlinedIcon />\r\n                                </IconButton>\r\n                            </span>\r\n                        </Tooltip>\r\n                        <Table size=\"small\" aria-label=\"a dense table\">\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell style={{backgroundColor: '#000000', color: '#FFFFFF'}}>#&nbsp;</TableCell>\r\n                                    <TableCell style={{backgroundColor: '#000000', color: '#FFFFFF'}} align=\"right\">Flat Number</TableCell>\r\n                                    <TableCell style={{backgroundColor: '#000000', color: '#FFFFFF'}} align=\"right\">Month</TableCell>\r\n                                    <TableCell style={{backgroundColor: '#000000', color: '#FFFFFF'}} align=\"right\">Year</TableCell>\r\n                                    <TableCell style={{backgroundColor: '#000000', color: '#FFFFFF'}} align=\"right\">Actual Payment</TableCell>\r\n                                    <TableCell style={{backgroundColor: '#000000', color: '#FFFFFF'}} align=\"right\">Payment Mode</TableCell>\r\n                                    <TableCell style={{backgroundColor: '#000000', color: '#FFFFFF'}} align=\"right\">Delete</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n\r\n                            <TableBody>\r\n                                {this.state.rows.map((item, idx) => (\r\n                                    <TableRow key={idx}>\r\n                                        <TableCell component=\"th\" scope=\"row\">{idx}</TableCell>\r\n                                        <TableCell align=\"right\">\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                name=\"flatNumber\"\r\n                                                value={item.flatNumber}\r\n                                                onChange={this.handleChange(idx)}\r\n                                                className=\"form-control\"\r\n                                            />\r\n                                        </TableCell>\r\n                                        <TableCell align=\"right\">\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                name=\"month\"\r\n                                                value={item.selectedMonth}\r\n                                                onChange={this.handleChange(idx)}\r\n                                                className=\"form-control\"\r\n                                            />\r\n                                        </TableCell>\r\n                                        <TableCell align=\"right\">\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                name=\"year\"\r\n                                                value={item.selectedYear}\r\n                                                onChange={this.handleChange(idx)}\r\n                                                className=\"form-control\"\r\n                                            />\r\n                                        </TableCell>\r\n                                        <TableCell align=\"right\">\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                name=\"actualPayment\"\r\n                                                value={item.actualPayment}\r\n                                                onChange={this.handleChange(idx)}\r\n                                                className=\"form-control\"\r\n                                            />\r\n                                        </TableCell>\r\n                                        <TableCell align=\"right\">\r\n                                            <select name=\"paymentMode\" id=\"mode\"\r\n                                                    className=\"form-control\"\r\n                                                    onChange={this.handleChange(idx)}\r\n                                                    value={item.paymentMode}>\r\n                                                <option value=\"online\">Online</option>\r\n                                                <option value=\"cash\">Cash</option>\r\n                                            </select>\r\n                                        </TableCell>\r\n                                        <TableCell align=\"right\">\r\n                                            <IconButton aria-label=\"delete\"\r\n                                                        onClick={() => this.handleRemoveRow(idx)}>\r\n                                                <DeleteIcon />\r\n                                            </IconButton>\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                </Paper>\r\n            </main>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    txnResponseProp: state.maintenanceReducer.txnResponse,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    saveBatch: (txnArr) => dispatch(saveMaintenanceInBatch(txnArr)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddMultipleTxn);","import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ReceiptIcon from '@material-ui/icons/Receipt';\r\nimport DnsIcon from '@material-ui/icons/Dns';\r\nimport AddBoxIcon from '@material-ui/icons/AddBox';\r\nimport GroupAddIcon from '@material-ui/icons/GroupAdd';\r\nimport PriorityHighIcon from '@material-ui/icons/PriorityHigh';\r\nimport FlatLookup from './FlatLookup';\r\nimport TxnData from './TxnData';\r\nimport NewTransactionForm from \"./NewTransactionForm\";\r\nimport PendingMaintenance from \"../components/PendingMaintenance\";\r\nimport AddMultipleTxn from \"../components/AddMultipleTxn\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    appBar: {\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        marginLeft: drawerWidth,\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    toolbar: theme.mixins.toolbar,\r\n    content: {\r\n        flexGrow: 1,\r\n        backgroundColor: theme.palette.background.default,\r\n        padding: theme.spacing(3),\r\n    },\r\n}));\r\n\r\nconst AppDrawer = () => {\r\n    const classes = useStyles();\r\n\r\n    let[selectedIndex, setSelectedIndex] = React.useState(0);\r\n\r\n    const onMenuItemClick = (index) => {\r\n        setSelectedIndex(index);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline />\r\n            <AppBar position=\"fixed\" className={classes.appBar}>\r\n                <Toolbar>\r\n                    <Typography variant=\"h6\" noWrap>\r\n                        Sriven Maintenance Ledger\r\n                    </Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Drawer\r\n                className={classes.drawer}\r\n                variant=\"permanent\"\r\n                classes={{\r\n                    paper: classes.drawerPaper,\r\n                }}\r\n                anchor=\"left\"\r\n            >\r\n                <div className={classes.toolbar} />\r\n                <Divider component=\"div\" />\r\n                <List>\r\n                    <ListItem button key=\"flatLookup\" onClick={() => onMenuItemClick(0)}>\r\n                        <ListItemIcon><DnsIcon /></ListItemIcon>\r\n                        <ListItemText primary=\"Flat Lookup\" />\r\n                    </ListItem>\r\n                </List>\r\n                <Divider />\r\n                <List>\r\n                    <ListItem button key=\"getAllTxns\" onClick={() => onMenuItemClick(1)}>\r\n                        <ListItemIcon><ReceiptIcon /></ListItemIcon>\r\n                        <ListItemText primary=\"All Transactions\" />\r\n                    </ListItem>\r\n                </List>\r\n                <Divider />\r\n                <List>\r\n                    <ListItem button key=\"addMaintenance\" onClick={() => onMenuItemClick(2)}>\r\n                        <ListItemIcon><AddBoxIcon /></ListItemIcon>\r\n                        <ListItemText primary=\"Add Maintenance\" />\r\n                    </ListItem>\r\n                </List>\r\n                <Divider />\r\n                <List>\r\n                    <ListItem button key=\"addMultipleMaintenance\" onClick={() => onMenuItemClick(3)}>\r\n                        <ListItemIcon><GroupAddIcon /></ListItemIcon>\r\n                        <ListItemText primary=\"Batch Add\" />\r\n                    </ListItem>\r\n                </List>\r\n                <Divider />\r\n                <List>\r\n                    <ListItem button key=\"pendingTxns\" onClick={() => onMenuItemClick(4)}>\r\n                        <ListItemIcon><PriorityHighIcon /></ListItemIcon>\r\n                        <ListItemText primary=\"Pending Maintenance\" />\r\n                    </ListItem>\r\n                </List>\r\n                <Divider />\r\n            </Drawer>\r\n            <main className={classes.content}>\r\n                <div className={classes.toolbar} />\r\n                {\r\n                    selectedIndex === 0 &&\r\n                    <FlatLookup />\r\n                }\r\n\r\n                {\r\n                    selectedIndex === 1 &&\r\n                    <TxnData/>\r\n                }\r\n\r\n                {\r\n                    selectedIndex === 2 &&\r\n                    <NewTransactionForm />\r\n                }\r\n\r\n                {\r\n                    selectedIndex === 3 &&\r\n                    <AddMultipleTxn />\r\n                }\r\n\r\n                {\r\n                    selectedIndex === 4 &&\r\n                    <PendingMaintenance />\r\n                }\r\n            </main>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AppDrawer;","import React from 'react';\r\nimport './App.css';\r\nimport AppDrawer from \"./containers/AppDrawer\";\r\n\r\nfunction App() {\r\n  return (\r\n    <AppDrawer />\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const initialState = {\r\n    employees : [],\r\n    managers : [],\r\n    currentEmployee : {},\r\n    jobHistory : []\r\n};\r\n\r\nconst employeeReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case \"LIST_EMPLOYEES\":\r\n            return {\r\n                ...state,\r\n                employees: action.payload\r\n            };\r\n\r\n        case \"LIST_MANAGERS\":\r\n            return {\r\n                ...state,\r\n                managers: action.payload\r\n            };\r\n\r\n        case \"SET_CURRENT_EMPLOYEE\":\r\n            return {\r\n                ...state,\r\n                currentEmployee: action.payload\r\n            };\r\n\r\n        case \"DELETE_EMPLOYEE\":\r\n            return {\r\n              ...state,\r\n              employees: action.payload\r\n            };\r\n\r\n        case \"JOB_HISTORY_SUCCESS\":\r\n            return {\r\n              ...state,\r\n              jobHistory: action.payload  \r\n            };\r\n\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nexport default employeeReducer;","const initialState = {\r\n    jobs : [],\r\n    selectedJobTitle : ''\r\n};\r\n\r\nconst jobIdReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case \"LIST_JOBS\":\r\n            return {\r\n                ...state,\r\n                jobs: action.payload\r\n            };\r\n\r\n        case \"SELECTED_JOB\":\r\n            return {\r\n              ...state,\r\n                selectedJobTitle: action.payload\r\n            };\r\n\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nexport default jobIdReducer;","const initialState = {\r\n    firstName: '',\r\n    lastName: '',\r\n    email: '',\r\n    phoneNumber: '',\r\n    hireDate: '',\r\n    jobId: '',\r\n    salary: 0,\r\n    commissionPct: 0,\r\n    managerId: 0,\r\n    departmentId: 0\r\n};\r\n\r\nconst newEmployeeReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case \"SET_EMPLOYEE_FIRST_NAME\":\r\n            return {\r\n                ...state,\r\n                firstName: action.payload\r\n            };\r\n\r\n        case \"SET_EMPLOYEE_LAST_NAME\":\r\n            return {\r\n                ...state,\r\n                lastName: action.payload\r\n            };\r\n\r\n        case \"SET_EMPLOYEE_EMAIL\":\r\n            return {\r\n                ...state,\r\n                email: action.payload\r\n            };\r\n\r\n        case \"SET_EMPLOYEE_PHONE\":\r\n            return {\r\n                ...state,\r\n                phoneNumber: action.payload\r\n            };\r\n\r\n        case \"SET_EMPLOYEE_HIRE_DATE\":\r\n            return {\r\n                ...state,\r\n                hireDate: action.payload\r\n            };\r\n\r\n        case \"SET_EMPLOYEE_SALARY\":\r\n            return {\r\n                ...state,\r\n                salary: action.payload\r\n            };\r\n\r\n        case \"SET_EMPLOYEE_JOB_ID\":\r\n            return {\r\n                ...state,\r\n                jobId: action.payload\r\n            };\r\n\r\n        case \"SET_EMPLOYEE_COMMISSION\":\r\n            return {\r\n                ...state,\r\n                commissionPct: action.payload\r\n            };\r\n\r\n        case \"SET_EMPLOYEE_MANAGER\":\r\n            return {\r\n                ...state,\r\n                managerId: action.payload\r\n            };\r\n\r\n        case \"SET_EMPLOYEE_DEPT\":\r\n            return {\r\n                ...state,\r\n                departmentId: action.payload\r\n            };\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nexport default newEmployeeReducer;","const initialState = {\r\n    lookup : [],\r\n    flatLookup : null,\r\n    txnData : [],\r\n    txnDate : null,\r\n    txnAmount : 0,\r\n    paymentMode : 'online',\r\n    selectedMonth : new Date().getMonth(),\r\n    selectedYear : new Date().getFullYear(),\r\n    txnResponse : null,\r\n    pendingTxns : new Map()\r\n};\r\n\r\nconst defaultState = {\r\n    lookup : [],\r\n    flatLookup : null,\r\n    txnData : [],\r\n    txnDate : null,\r\n    txnAmount : 0,\r\n    paymentMode : 'online',\r\n    selectedMonth : new Date().getMonth(),\r\n    selectedYear : new Date().getFullYear(),\r\n    txnResponse : null,\r\n    pendingTxns : new Map()\r\n};\r\n\r\nconst maintenanceReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case \"FLAT_LOOKUP\":\r\n            return {\r\n                ...state,\r\n                lookup: action.payload\r\n            };\r\n\r\n        case \"INDIVIDUAL_FLAT_LOOKUP\":\r\n            return {\r\n                ...state,\r\n                flatLookup : action.payload\r\n            };\r\n\r\n        case \"SET_TXN_DATE\":\r\n            return {\r\n                ...state,\r\n                txnDate : action.payload\r\n            };\r\n\r\n        case \"SET_TXN_AMOUNT\":\r\n            return {\r\n                ...state,\r\n                txnAmount : action.payload\r\n            };\r\n\r\n        case \"SET_PAYMENT_MODE\":\r\n            return {\r\n                ...state,\r\n                paymentMode : action.payload\r\n            };\r\n\r\n        case \"SET_MONTH\":\r\n            return {\r\n                ...state,\r\n                selectedMonth : action.payload\r\n            };\r\n\r\n        case \"SET_YEAR\":\r\n            return {\r\n                ...state,\r\n                selectedYear : action.payload\r\n            };\r\n\r\n        case \"SAVE_TRANSACTION\":\r\n            return {\r\n                ...state,\r\n                txnResponse : action.payload\r\n            };\r\n\r\n        case \"GET_ALL_TRANSACTIONS\":\r\n            return {\r\n                ...state,\r\n                txnData: action.payload\r\n            };\r\n\r\n        case \"UPDATE_TRANSACTIONS\":\r\n            return {\r\n                ...state,\r\n                txnData: action.payload\r\n            };\r\n\r\n        case \"DELETE_TRANSACTIONS\":\r\n            return {\r\n                ...state,\r\n                txnResponse: action.payload\r\n            };\r\n\r\n        case \"PENDING_TRANSACTIONS\":\r\n            return {\r\n                ...state,\r\n                pendingTxns: action.payload\r\n            };\r\n\r\n        case \"RESET_TRANSACTION\":\r\n            return {\r\n                state: defaultState\r\n            };\r\n\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nexport default maintenanceReducer;","import {combineReducers} from \"redux\";\r\nimport { reducer as formReducer } from \"redux-form\";\r\nimport employeeReducer from \"./employeeReducer\";\r\nimport jobIdReducer from \"./jobIdReducer\";\r\nimport newEmployeeReducer from \"./newEmployeeReducer\";\r\nimport maintenanceReducer from \"./maintenanceReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    form: formReducer,\r\n    empReducer: employeeReducer,\r\n    jobIdReducer,\r\n    newEmployeeReducer,\r\n    maintenanceReducer\r\n});\r\n\r\nexport default rootReducer;","import rootReducer from \"./reducers/rootReducer\";\r\nimport thunk from 'redux-thunk';\r\nimport {applyMiddleware} from 'redux';\r\nimport {createStore} from \"redux\";\r\nimport {composeWithDevTools} from 'redux-devtools-extension';\r\n\r\nconst store = createStore(rootReducer, composeWithDevTools( applyMiddleware(thunk) ));\r\n\r\nexport default store;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport {Provider} from 'react-redux';\r\nimport store from './store';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}