{"version":3,"sources":["modules/addEmployee/PersonalDetailsForm.js","modules/addEmployee/Review.js","components/Copyright.js","util/NumberFormatCustom.js","modules/addEmployee/SalaryField.js","modules/addEmployee/CommissionField.js","ApiConstants.js","modules/addEmployee/SelectManager.js","actions/employeeActions.js","actions/jobActions.js","modules/addEmployee/SelectJobId.js","modules/addEmployee/SelectDepartment.js","modules/addEmployee/SelectHireDate.js","modules/addEmployee/JobDetailsForm.js","modules/addEmployee/AddNewEmployeeForm.js","containers/NewExpenseForm.js","containers/EmployeesList.js","containers/AppDrawer.js","App.js","reducers/employeeReducer.js","reducers/jobIdReducer.js","reducers/newEmployeeReducer.js","reducers/rootReducer.js","store.js","serviceWorker.js","index.js"],"names":["PersonalDetailsForm","dispatch","useDispatch","Fragment","Grid","container","spacing","item","xs","sm","TextField","required","id","name","label","fullWidth","onChange","event","type","payload","target","value","products","desc","price","addresses","payments","detail","useStyles","makeStyles","theme","listItem","padding","total","fontWeight","title","marginTop","Review","classes","Typography","variant","gutterBottom","List","disablePadding","map","product","ListItem","className","key","ListItemText","primary","secondary","join","direction","payment","Copyright","color","align","Link","href","Date","getFullYear","NumberFormatCustom","props","inputRef","other","getInputRef","onValueChange","values","thousandSeparator","isNumericString","prefix","SalaryField","React","useState","numberformat","setValues","InputProps","inputComponent","CommissionField","preventDefault","handleCommissionPctChange","host","FETCH_ALL_EMPLOYEES","FETCH_ALL_JOBS","FETCH_ALL_MANAGERS","FETCH_EMPLOYEE_JOB_HISTORY","formControl","margin","minWidth","SelectManager","useEffect","a","async","axios","get","Urls","then","res","managers","data","catch","error","console","managerList","useSelector","state","empReducer","selectedManager","setSelectedManager","FormControl","InputLabel","Select","labelId","handleManagerChange","manager","MenuItem","firstName","lastName","SelectJobId","jobList","jobIdReducer","jobs","jobTitle","setJobTitle","log","handleJobIdChange","job","jobId","SelectDepartment","SelectHireDate","selectedDate","setSelectedDate","utils","DateFnsUtils","disableToolbar","format","date","KeyboardButtonProps","JobDetailsForm","md","appBar","position","layout","width","marginLeft","marginRight","breakpoints","up","paper","marginBottom","stepper","buttons","display","justifyContent","button","steps","AddNewEmployeeForm","activeStep","setActiveStep","CssBaseline","Paper","component","Stepper","Step","StepLabel","length","step","Error","getStepContent","Button","onClick","NewExpenseForm","connect","employees","fetchJobHistory","employeeId","jobHistory","fetchEmployeeJobHistory","columns","options","filter","sort","customBodyRender","filterType","responsive","rowsPerPage","jsonMode","selectableRows","fixedHeaderOptions","xAxis","yAxis","root","drawer","flexShrink","drawerPaper","toolbar","mixins","content","flexGrow","backgroundColor","palette","background","default","AppDrawer","selectedIndex","setSelectedIndex","onMenuItemClick","index","AppBar","Toolbar","noWrap","Drawer","anchor","Divider","ListItemIcon","App","initialState","currentEmployee","employeeReducer","action","selectedJobTitle","email","phoneNumber","hireDate","salary","commissionPct","managerId","departmentId","newEmployeeReducer","rootReducer","combineReducers","form","formReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.81cad493.chunk.js","sourcesContent":["import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport {useDispatch} from \"react-redux\";\r\n\r\nconst PersonalDetailsForm = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Grid container spacing={2}>\r\n                <Grid item xs={12} sm={6}>\r\n                    <TextField\r\n                        required\r\n                        id=\"firstName\"\r\n                        name=\"firstName\"\r\n                        label=\"First name\"\r\n                        fullWidth\r\n                        onChange={(event) => dispatch({\r\n                            type: \"SET_EMPLOYEE_FIRST_NAME\",\r\n                            payload: event.target.value\r\n                        })}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                    <TextField\r\n                        required\r\n                        id=\"lastName\"\r\n                        name=\"lastName\"\r\n                        label=\"Last name\"\r\n                        fullWidth\r\n                        onChange={(event) => dispatch({\r\n                            type: \"SET_EMPLOYEE_LAST_NAME\",\r\n                            payload: event.target.value\r\n                        })}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                    <TextField\r\n                        required\r\n                        id=\"email\"\r\n                        name=\"email\"\r\n                        label=\"Email\"\r\n                        fullWidth\r\n                        onChange={(event) => dispatch({\r\n                            type: \"SET_EMPLOYEE_EMAIL\",\r\n                            payload: event.target.value\r\n                        })}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                    <TextField\r\n                        required\r\n                        id=\"phone\"\r\n                        name=\"phone\"\r\n                        label=\"Phone\"\r\n                        fullWidth\r\n                        onChange={(event) => dispatch({\r\n                            type: \"SET_EMPLOYEE_PHONE\",\r\n                            payload: event.target.value\r\n                        })}\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default PersonalDetailsForm;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst products = [\r\n    { name: 'Product 1', desc: 'A nice thing', price: '$9.99' },\r\n    { name: 'Product 2', desc: 'Another thing', price: '$3.45' },\r\n    { name: 'Product 3', desc: 'Something else', price: '$6.51' },\r\n    { name: 'Product 4', desc: 'Best thing of all', price: '$14.11' },\r\n    { name: 'Shipping', desc: '', price: 'Free' },\r\n];\r\nconst addresses = ['1 Material-UI Drive', 'Reactville', 'Anytown', '99999', 'USA'];\r\nconst payments = [\r\n    { name: 'Card type', detail: 'Visa' },\r\n    { name: 'Card holder', detail: 'Mr John Smith' },\r\n    { name: 'Card number', detail: 'xxxx-xxxx-xxxx-1234' },\r\n    { name: 'Expiry date', detail: '04/2024' },\r\n];\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    listItem: {\r\n        padding: theme.spacing(1, 0),\r\n    },\r\n    total: {\r\n        fontWeight: 700,\r\n    },\r\n    title: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nconst Review = () => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n                Order summary\r\n            </Typography>\r\n            <List disablePadding>\r\n                {products.map(product => (\r\n                    <ListItem className={classes.listItem} key={product.name}>\r\n                        <ListItemText primary={product.name} secondary={product.desc} />\r\n                        <Typography variant=\"body2\">{product.price}</Typography>\r\n                    </ListItem>\r\n                ))}\r\n                <ListItem className={classes.listItem}>\r\n                    <ListItemText primary=\"Total\" />\r\n                    <Typography variant=\"subtitle1\" className={classes.total}>\r\n                        $34.06\r\n                    </Typography>\r\n                </ListItem>\r\n            </List>\r\n            <Grid container spacing={2}>\r\n                <Grid item xs={12} sm={6}>\r\n                    <Typography variant=\"h6\" gutterBottom className={classes.title}>\r\n                        Shipping\r\n                    </Typography>\r\n                    <Typography gutterBottom>John Smith</Typography>\r\n                    <Typography gutterBottom>{addresses.join(', ')}</Typography>\r\n                </Grid>\r\n                <Grid item container direction=\"column\" xs={12} sm={6}>\r\n                    <Typography variant=\"h6\" gutterBottom className={classes.title}>\r\n                        Payment details\r\n                    </Typography>\r\n                    <Grid container>\r\n                        {payments.map(payment => (\r\n                            <React.Fragment key={payment.name}>\r\n                                <Grid item xs={6}>\r\n                                    <Typography gutterBottom>{payment.name}</Typography>\r\n                                </Grid>\r\n                                <Grid item xs={6}>\r\n                                    <Typography gutterBottom>{payment.detail}</Typography>\r\n                                </Grid>\r\n                            </React.Fragment>\r\n                        ))}\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Review;","import Typography from \"@material-ui/core/Typography\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport React from \"react\";\r\n\r\nconst Copyright = () => {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            {'Copyright © '}\r\n            <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n                Your Website\r\n            </Link>{' '}\r\n            {new Date().getFullYear()}\r\n            {'.'}\r\n        </Typography>\r\n    );\r\n};\r\n\r\nexport default Copyright;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport NumberFormat from 'react-number-format';\r\n\r\nexport default function NumberFormatCustom(props) {\r\n    const { inputRef, onChange, ...other } = props;\r\n\r\n    return (\r\n        <NumberFormat\r\n            {...other}\r\n            getInputRef={inputRef}\r\n            onValueChange={values => {\r\n                onChange({\r\n                    target: {\r\n                        value: values.value,\r\n                    },\r\n                });\r\n            }}\r\n            thousandSeparator\r\n            isNumericString\r\n            prefix=\"₹\"\r\n        />\r\n    );\r\n}\r\n\r\nNumberFormatCustom.propTypes = {\r\n    inputRef: PropTypes.func.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n};","import NumberFormatCustom from \"../../util/NumberFormatCustom\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport React from \"react\";\r\nimport {useDispatch} from \"react-redux\";\r\n\r\nexport default function SalaryField() {\r\n\r\n    const [values, setValues] = React.useState({\r\n        numberformat: '1320',\r\n    });\r\n\r\n    const handleSalaryChange = name => event => {\r\n        setValues({\r\n            ...values,\r\n            [name]: event.target.value,\r\n        });\r\n        dispatch({\r\n            type: \"SET_EMPLOYEE_SALARY\",\r\n            payload: event.target.value\r\n        });\r\n    };\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <TextField\r\n            required\r\n            id=\"salary\"\r\n            value={values.numberformat}\r\n            onChange={handleSalaryChange('numberformat')}\r\n            InputProps={{\r\n                inputComponent: NumberFormatCustom,\r\n            }}\r\n            label=\"Fixed Salary\"\r\n            fullWidth\r\n        />\r\n    )\r\n};","import React from \"react\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nexport default function CommissionField() {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleCommissionPctChange = (event) => {\r\n    event.preventDefault();\r\n    dispatch({\r\n        type: \"SET_EMPLOYEE_COMMISSION\",\r\n        payload: event.target.value\r\n    });\r\n  };\r\n\r\n  return (\r\n      <TextField\r\n          type=\"number\"\r\n          id=\"commissionPct\"\r\n          label=\"Commission%\"\r\n          fullWidth\r\n          onChange={(event) => handleCommissionPctChange(event)}\r\n      />\r\n  )\r\n};","const host = \"praveeryudi-org.cfapps.io\";\r\n\r\nexport const FETCH_ALL_EMPLOYEES = `https://${host}/employees/all`;\r\nexport const FETCH_ALL_JOBS = `https://${host}/jobs/all`;\r\nexport const FETCH_ALL_MANAGERS = `https://${host}/managers/all`;\r\nexport const FETCH_EMPLOYEE_JOB_HISTORY = `https://${host}/api/fetch/employee/jobHistory/`;","import React, {useEffect} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {fetchAllManagers} from \"./../../actions/employeeActions\";\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    formControl: {\r\n        margin: theme.spacing(0),\r\n        minWidth: 242,\r\n    }\r\n}));\r\n\r\nexport default function SelectManager() {\r\n\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchAllManagers());\r\n    }, [dispatch]);\r\n\r\n    let managerList = useSelector(state => state.empReducer.managers);\r\n    let[selectedManager, setSelectedManager] = React.useState(0);\r\n\r\n    const handleManagerChange = (event) => {\r\n        event.preventDefault();\r\n        setSelectedManager(event.target.value);\r\n        dispatch({\r\n            type: \"SET_EMPLOYEE_MANAGER\",\r\n            payload: event.target.value\r\n        });\r\n    };\r\n\r\n    return (\r\n        <FormControl className={classes.formControl}>\r\n            <InputLabel id=\"manager-label\">Manager</InputLabel>\r\n            <Select\r\n                labelId=\"manager-label\"\r\n                id=\"manager-label\"\r\n                value={selectedManager}\r\n                onChange={(event) => handleManagerChange(event)}\r\n            >\r\n                {\r\n                    managerList.map((manager) =>\r\n                        <MenuItem key={manager.id} value={manager.id}>\r\n                            {manager.firstName} {manager.lastName}\r\n                        </MenuItem>)\r\n                }\r\n            </Select>\r\n        </FormControl>\r\n    )\r\n};","import axios from \"axios\";\r\nimport * as Urls from \"./../ApiConstants\";\r\n\r\nexport const fetchAllEmployees = () => {\r\n    return async(dispatch) => {\r\n        await axios.get(Urls.FETCH_ALL_EMPLOYEES)\r\n            .then(res => {\r\n                let data = res.data;\r\n                dispatch({\r\n                    type: \"LIST_EMPLOYEES\",\r\n                    payload: data});\r\n            })\r\n            .catch(function(error) {\r\n                console.error(\"Error in fetching employees list\", error);\r\n            })\r\n    };\r\n};\r\n\r\nexport const fetchAllManagers = () => {\r\n    return async(dispatch) => {\r\n        await axios.get(Urls.FETCH_ALL_MANAGERS)\r\n            .then(async res => {\r\n                const managers = res.data;\r\n                await dispatch({\r\n                    type: \"LIST_MANAGERS\",\r\n                    payload: managers\r\n                });\r\n            })\r\n            .catch(function(error) {\r\n                console.error(\"Error in fetching manager list\", error);\r\n            })\r\n    }\r\n};\r\n\r\nexport const fetchEmployeeJobHistory = (employeeId) => {\r\n    return async(dispatch) => {\r\n        await axios.get(Urls.FETCH_EMPLOYEE_JOB_HISTORY, employeeId)\r\n        .then(async res => {\r\n            const jobHistory = res.data;\r\n            await dispatch({\r\n                type: \"JOB_HISTORY_SUCCESS\",\r\n                payload: jobHistory\r\n            });\r\n        })\r\n        .catch(function(error) {\r\n            console.error(error);\r\n        })\r\n    }\r\n};","import axios from \"axios\";\r\nimport * as Urls from \"./../ApiConstants\";\r\n\r\nexport const fetchAllJobs = () => {\r\n    return async(dispatch) => {\r\n        await axios.get(Urls.FETCH_ALL_JOBS)\r\n            .then(res => {\r\n                let data = res.data;\r\n                dispatch({\r\n                    type: \"LIST_JOBS\",\r\n                    payload: data});\r\n            })\r\n            .catch(function(error) {\r\n                console.error(\"Error in fetching jobs\", error);\r\n            })\r\n    };\r\n};\r\n\r\nexport const setSelectedJob = (jobTitle) => {\r\n    return async(dispatch) => {\r\n        await dispatch({\r\n            type: \"SELECTED_JOB\",\r\n            payload: jobTitle\r\n        })\r\n    }\r\n};","import {makeStyles} from '@material-ui/core/styles';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport React, {useEffect} from \"react\";\r\nimport {useSelector, useDispatch} from \"react-redux\";\r\nimport {fetchAllJobs} from \"../../actions/jobActions\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    formControl: {\r\n        margin: theme.spacing(2),\r\n        minWidth: 242,\r\n    }\r\n}));\r\n\r\nexport default function SelectJobId() {\r\n\r\n    const dispatch = useDispatch();\r\n    let jobList = useSelector(state => state.jobIdReducer.jobs);\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchAllJobs());\r\n    }, [dispatch]);\r\n\r\n    const classes = useStyles();\r\n    let[jobTitle, setJobTitle] = React.useState('');\r\n\r\n    const handleJobIdChange = (event) => {\r\n        event.preventDefault();\r\n        console.log(\"Job Title = \", event.target.value);\r\n        setJobTitle(event.target.value);\r\n        dispatch({\r\n            type: \"SET_EMPLOYEE_JOB_ID\",\r\n            payload: event.target.value\r\n        });\r\n    };\r\n\r\n    return (\r\n        <FormControl className={classes.formControl}>\r\n        <InputLabel id=\"job-label\">Job Role</InputLabel>\r\n        <Select\r\n            labelId=\"job-label\"\r\n            id=\"job-label\"\r\n            value={jobTitle}\r\n            onChange={(event) => handleJobIdChange(event)}\r\n        >\r\n            {\r\n                jobList.map((job) =>\r\n                    <MenuItem key={job.jobId} value={job.jobId}>\r\n                        { job.jobTitle }\r\n                    </MenuItem>)\r\n            }\r\n        </Select>\r\n        </FormControl>\r\n    )\r\n};","import TextField from \"@material-ui/core/TextField\";\r\nimport React from \"react\";\r\nimport {useDispatch} from \"react-redux\";\r\n\r\nexport default function SelectDepartment() {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleDeptChange = (event) => {\r\n      event.preventDefault();\r\n      dispatch({\r\n          type: \"SET_EMPLOYEE_DEPT\",\r\n          payload: event.target.value\r\n      });\r\n    };\r\n\r\n    return (\r\n        <TextField\r\n            required\r\n            id=\"deptId\"\r\n            label=\"Department\"\r\n            fullWidth\r\n        />\r\n    )\r\n};","import React from 'react';\r\nimport {useDispatch} from \"react-redux\";\r\nimport 'date-fns';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {KeyboardDatePicker, MuiPickersUtilsProvider} from '@material-ui/pickers';\r\n\r\nexport default function SelectHireDate() {\r\n\r\n    const [selectedDate, setSelectedDate] = React.useState(new Date());\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleDateChange = date => {\r\n        setSelectedDate(date);\r\n        dispatch({\r\n            type: \"SET_EMPLOYEE_HIRE_DATE\",\r\n            payload: date\r\n        });\r\n    };\r\n\r\n    return (\r\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n            <KeyboardDatePicker\r\n                disableToolbar\r\n                fullWidth\r\n                variant=\"inline\"\r\n                format=\"MM/dd/yyyy\"\r\n                margin=\"normal\"\r\n                id=\"hireDate\"\r\n                label=\"Hire Date\"\r\n                value={selectedDate}\r\n                onChange={handleDateChange}\r\n                KeyboardButtonProps={{\r\n                    'aria-label': 'change date',\r\n                }}\r\n            />\r\n        </MuiPickersUtilsProvider>\r\n    )\r\n};","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport SalaryField from \"./SalaryField\";\r\nimport CommissionField from \"./CommissionField\";\r\nimport SelectManager from \"./SelectManager\";\r\nimport SelectJobId from \"./SelectJobId\";\r\nimport SelectDepartment from \"./SelectDepartment\";\r\nimport SelectHireDate from \"./SelectHireDate\";\r\n\r\nconst JobDetailsForm = () => {\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={12} md={6}>\r\n                    <SelectHireDate />\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                    <SelectJobId />\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                    <SalaryField />\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                    <CommissionField />\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                    <SelectManager />\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                    <SelectDepartment />\r\n                </Grid>\r\n            </Grid>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default JobDetailsForm;","import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport PersonalDetailsForm from './PersonalDetailsForm';\r\nimport Review from './Review';\r\nimport Copyright from \"../../components/Copyright\";\r\nimport JobDetailsForm from \"./JobDetailsForm\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    appBar: {\r\n        position: 'relative',\r\n    },\r\n    layout: {\r\n        width: 'auto',\r\n        marginLeft: theme.spacing(2),\r\n        marginRight: theme.spacing(2),\r\n        [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\r\n            width: 600,\r\n            marginLeft: 'auto',\r\n            marginRight: 'auto',\r\n        },\r\n    },\r\n    paper: {\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(3),\r\n        padding: theme.spacing(2),\r\n        [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\r\n            marginTop: theme.spacing(2),\r\n            marginBottom: theme.spacing(6),\r\n            padding: theme.spacing(3),\r\n        },\r\n    },\r\n    stepper: {\r\n        padding: theme.spacing(3, 0, 5),\r\n    },\r\n    buttons: {\r\n        display: 'flex',\r\n        justifyContent: 'flex-end',\r\n    },\r\n    button: {\r\n        marginTop: theme.spacing(3),\r\n        marginLeft: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nconst steps = ['Personal Details', 'Job Details', 'Review'];\r\n\r\nfunction getStepContent(step) {\r\n    switch (step) {\r\n        case 0:\r\n            return <PersonalDetailsForm />;\r\n        case 1:\r\n            return <JobDetailsForm />;\r\n        case 2:\r\n            return <Review />;\r\n        default:\r\n            throw new Error('Unknown step');\r\n    }\r\n}\r\n\r\nconst AddNewEmployeeForm = () => {\r\n    const classes = useStyles();\r\n    const [activeStep, setActiveStep] = React.useState(0);\r\n\r\n    const handleNext = () => {\r\n        console.log(\"Current Step = \", activeStep);\r\n        setActiveStep(activeStep + 1);\r\n    };\r\n\r\n    const handleBack = () => {\r\n        setActiveStep(activeStep - 1);\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <CssBaseline />\r\n            <main className={classes.layout}>\r\n                <Paper className={classes.paper}>\r\n                    <Typography component=\"h1\" variant=\"h5\" align=\"center\">\r\n                        Add Employee\r\n                    </Typography>\r\n                    <Stepper activeStep={activeStep} className={classes.stepper}>\r\n                        {steps.map(label => (\r\n                            <Step key={label}>\r\n                                <StepLabel>{label}</StepLabel>\r\n                            </Step>\r\n                        ))}\r\n                    </Stepper>\r\n                    <React.Fragment>\r\n                        {activeStep === steps.length ? (\r\n                            <React.Fragment>\r\n                                <Typography variant=\"h5\" gutterBottom>\r\n                                    Thank you for your order.\r\n                                </Typography>\r\n                                <Typography variant=\"subtitle1\">\r\n                                    Your order number is #2001539. We have emailed your order confirmation, and will\r\n                                    send you an update when your order has shipped.\r\n                                </Typography>\r\n                            </React.Fragment>\r\n                        ) : (\r\n                            <React.Fragment>\r\n                                {getStepContent(activeStep)}\r\n                                <div className={classes.buttons}>\r\n                                    {activeStep !== 0 && (\r\n                                        <Button onClick={handleBack} className={classes.button}>\r\n                                            Back\r\n                                        </Button>\r\n                                    )}\r\n                                    <Button\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        onClick={handleNext}\r\n                                        className={classes.button}\r\n                                    >\r\n                                        {activeStep === steps.length - 1 ? 'Place order' : 'Next'}\r\n                                    </Button>\r\n                                </div>\r\n                            </React.Fragment>\r\n                        )}\r\n                    </React.Fragment>\r\n                </Paper>\r\n                <Copyright />\r\n            </main>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default AddNewEmployeeForm;","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport {useDispatch} from \"react-redux\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport {KeyboardDatePicker, MuiPickersUtilsProvider} from \"@material-ui/pickers\";\r\nimport NumberFormatCustom from \"../util/NumberFormatCustom\";\r\n\r\nconst NewExpenseForm = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const [selectedDate, setSelectedDate] = React.useState(new Date());\r\n    const [values, setValues] = React.useState({\r\n        numberformat: '1320',\r\n    });\r\n    const handleDateChange = date => {\r\n        setSelectedDate(date);\r\n        dispatch({\r\n            type: \"SET_EMPLOYEE_HIRE_DATE\",\r\n            payload: date\r\n        });\r\n    };\r\n    const handleAmountChange = name => event => {\r\n        setValues({\r\n            ...values,\r\n            [name]: event.target.value,\r\n        });\r\n        dispatch({\r\n            type: \"SET_EMPLOYEE_SALARY\",\r\n            payload: event.target.value\r\n        });\r\n    };\r\n\r\n    return (\r\n        <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={6}>\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                    <KeyboardDatePicker\r\n                        required\r\n                        disableToolbar\r\n                        fullWidth\r\n                        variant=\"inline\"\r\n                        format=\"MM/dd/yyyy\"\r\n                        margin=\"normal\"\r\n                        id=\"expenseDate\"\r\n                        value={selectedDate}\r\n                        onChange={handleDateChange}\r\n                        label=\"Expense Date\"\r\n                        KeyboardButtonProps={{\r\n                            'aria-label': 'change date',\r\n                        }}\r\n                    />\r\n                </MuiPickersUtilsProvider>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                    required\r\n                    id=\"expenseTitle\"\r\n                    name=\"expenseTitle\"\r\n                    label=\"Expense Title\"\r\n                    fullWidth\r\n                    onChange={(event) => dispatch({\r\n                        type: \"SET_EMPLOYEE_FIRST_NAME\",\r\n                        payload: event.target.value\r\n                    })}\r\n                />\r\n            </Grid>\r\n\r\n            <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                    required\r\n                    id=\"salary\"\r\n                    value={values.numberformat}\r\n                    onChange={handleAmountChange('numberformat')}\r\n                    InputProps={{\r\n                        inputComponent: NumberFormatCustom,\r\n                    }}\r\n                    label=\"Amount\"\r\n                    fullWidth\r\n                />\r\n            </Grid>\r\n\r\n            <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                    required\r\n                    id=\"enteredBy\"\r\n                    name=\"enteredBy\"\r\n                    label=\"Entered By\"\r\n                    fullWidth\r\n                    onChange={(event) => dispatch({\r\n                        type: \"SET_EMPLOYEE_PHONE\",\r\n                        payload: event.target.value\r\n                    })}\r\n                />\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default NewExpenseForm;","import React, {useEffect} from 'react';\r\nimport {connect, useDispatch} from 'react-redux';\r\nimport {fetchAllEmployees, fetchEmployeeJobHistory} from '../actions/employeeActions';\r\nimport MUIDataTable from \"mui-datatables\";\r\n\r\nconst EmployeesList = (props) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchAllEmployees());\r\n    }, [dispatch]);\r\n\r\n    const data = props.employees;\r\n    const columns = [\r\n        {\r\n            name: \"id\",\r\n            label: \"Id\",\r\n            options: {\r\n                filter: true,\r\n                sort: true,\r\n                customBodyRender: (value) => {\r\n                    return (\r\n                      <a href={props.fetchJobHistory(value)}>{value}</a>\r\n                    );\r\n                  }\r\n            }\r\n        },\r\n        {\r\n            name: \"firstName\",\r\n            label: \"First Name\",\r\n            options: {\r\n                filter: true,\r\n                sort: true,\r\n            }\r\n        },\r\n        {\r\n            name: \"lastName\",\r\n            label: \"Last Name\",\r\n            options: {\r\n                filter: true,\r\n                sort: true,\r\n            }\r\n        },\r\n        {\r\n            name: \"email\",\r\n            label: \"Email\",\r\n            options: {\r\n                filter: true,\r\n                sort: false,\r\n            }\r\n        },\r\n        {\r\n            name: \"phoneNumber\",\r\n            label: \"Phone\",\r\n            options: {\r\n                filter: true,\r\n                sort: false,\r\n            }\r\n        },\r\n        {\r\n            name: \"hireDate\",\r\n            label: \"Hire Date\",\r\n            options: {\r\n                filter: false,\r\n                sort: true,\r\n            }\r\n        },\r\n        {\r\n            name: \"jobId.jobId\",\r\n            label: \"Job Id\",\r\n            options: {\r\n                filter: true,\r\n                sort: false,\r\n            }\r\n        },\r\n        {\r\n            name: \"salary\",\r\n            label: \"Salary\",\r\n            options: {\r\n                filter: false,\r\n                sort: true,\r\n            }\r\n        },\r\n        {\r\n            name: \"commissionPct\",\r\n            label: \"Commission\",\r\n            options: {\r\n                filter: true,\r\n                sort: true,\r\n            }\r\n        },\r\n        {\r\n            name: \"managerId\",\r\n            label: \"Manager Id\",\r\n            options: {\r\n                filter: true,\r\n                sort: false,\r\n            }\r\n        },\r\n        {\r\n            name: \"departmentId\",\r\n            label: \"Department Id\",\r\n            options: {\r\n                filter: true,\r\n                sort: false,\r\n            }\r\n        },\r\n    ];\r\n\r\n    const options = {\r\n        filter: true,\r\n        filterType: 'dropdown',\r\n        responsive: 'scrollMaxHeight',\r\n        rowsPerPage: 10,\r\n        jsonMode: true,\r\n        selectableRows: 'none',\r\n        fixedHeaderOptions: {\r\n            xAxis: false,\r\n            yAxis: true\r\n        },\r\n    };\r\n\r\n    return (\r\n        <MUIDataTable\r\n            title={\"Employee List\"}\r\n            data={data}\r\n            columns={columns}\r\n            options={options}\r\n        />\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    employees: state.empReducer.employees,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    fetchJobHistory: (employeeId) => dispatch(fetchEmployeeJobHistory(employeeId)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EmployeesList);","import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\r\nimport MoneyIcon from '@material-ui/icons/Money';\r\nimport AddNewEmployeeForm from \"../modules/addEmployee/AddNewEmployeeForm\";\r\nimport NewExpenseForm from \"../containers/NewExpenseForm\";\r\nimport EmployeesList from \"./EmployeesList\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    appBar: {\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        marginLeft: drawerWidth,\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    toolbar: theme.mixins.toolbar,\r\n    content: {\r\n        flexGrow: 1,\r\n        backgroundColor: theme.palette.background.default,\r\n        padding: theme.spacing(3),\r\n    },\r\n}));\r\n\r\nconst AppDrawer = () => {\r\n    const classes = useStyles();\r\n\r\n    let[selectedIndex, setSelectedIndex] = React.useState(0);\r\n\r\n    const onMenuItemClick = (index) => {\r\n        setSelectedIndex(index);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline />\r\n            <AppBar position=\"fixed\" className={classes.appBar}>\r\n                <Toolbar>\r\n                    <Typography variant=\"h6\" noWrap>\r\n                        elite HR System\r\n                    </Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Drawer\r\n                className={classes.drawer}\r\n                variant=\"permanent\"\r\n                classes={{\r\n                    paper: classes.drawerPaper,\r\n                }}\r\n                anchor=\"left\"\r\n            >\r\n                <div className={classes.toolbar} />\r\n                <Divider component=\"div\" />\r\n                <List>\r\n                    <ListItem button key=\"allEmployees\" onClick={() => onMenuItemClick(0)}>\r\n                        <ListItemIcon><PeopleIcon /></ListItemIcon>\r\n                        <ListItemText primary=\"All Employees\" />\r\n                    </ListItem>\r\n                </List>\r\n                <Divider />\r\n                <List>\r\n                    <ListItem button key=\"addEmployee\" onClick={() => onMenuItemClick(1)}>\r\n                        <ListItemIcon><PersonAddIcon /></ListItemIcon>\r\n                        <ListItemText primary=\"Add Employee\" />\r\n                    </ListItem>\r\n                </List>\r\n                <Divider />\r\n                <List>\r\n                    <ListItem button key=\"addExpense\" onClick={() => onMenuItemClick(2)}>\r\n                        <ListItemIcon><MoneyIcon /></ListItemIcon>\r\n                        <ListItemText primary=\"Add Expense\" />\r\n                    </ListItem>\r\n                </List>\r\n                <Divider />\r\n            </Drawer>\r\n            <main className={classes.content}>\r\n                <div className={classes.toolbar} />\r\n                {\r\n                    selectedIndex === 0 &&\r\n                    <EmployeesList />\r\n                }\r\n\r\n                {\r\n                    selectedIndex === 1 &&\r\n                    <AddNewEmployeeForm />\r\n                }\r\n\r\n                {\r\n                    selectedIndex === 2 &&\r\n                    <NewExpenseForm />\r\n                }\r\n            </main>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AppDrawer;","import React from 'react';\r\nimport './App.css';\r\nimport AppDrawer from \"./containers/AppDrawer\";\r\n\r\nfunction App() {\r\n  return (\r\n    <AppDrawer />\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const initialState = {\r\n    employees : [],\r\n    managers : [],\r\n    currentEmployee : {},\r\n    jobHistory : []\r\n};\r\n\r\nconst employeeReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case \"LIST_EMPLOYEES\":\r\n            return {\r\n                ...state,\r\n                employees: action.payload\r\n            };\r\n\r\n        case \"LIST_MANAGERS\":\r\n            return {\r\n                ...state,\r\n                managers: action.payload\r\n            };\r\n\r\n        case \"SET_CURRENT_EMPLOYEE\":\r\n            return {\r\n                ...state,\r\n                currentEmployee: action.payload\r\n            };\r\n\r\n        case \"DELETE_EMPLOYEE\":\r\n            return {\r\n              ...state,\r\n              employees: action.payload\r\n            };\r\n\r\n        case \"JOB_HISTORY_SUCCESS\":\r\n            return {\r\n              ...state,\r\n              jobHistory: action.payload  \r\n            };\r\n\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nexport default employeeReducer;","const initialState = {\r\n    jobs : [],\r\n    selectedJobTitle : ''\r\n};\r\n\r\nconst jobIdReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case \"LIST_JOBS\":\r\n            return {\r\n                ...state,\r\n                jobs: action.payload\r\n            };\r\n\r\n        case \"SELECTED_JOB\":\r\n            return {\r\n              ...state,\r\n                selectedJobTitle: action.payload\r\n            };\r\n\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nexport default jobIdReducer;","const initialState = {\r\n    firstName: '',\r\n    lastName: '',\r\n    email: '',\r\n    phoneNumber: '',\r\n    hireDate: '',\r\n    jobId: '',\r\n    salary: 0,\r\n    commissionPct: 0,\r\n    managerId: 0,\r\n    departmentId: 0\r\n};\r\n\r\nconst newEmployeeReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case \"SET_EMPLOYEE_FIRST_NAME\":\r\n            return {\r\n                ...state,\r\n                firstName: action.payload\r\n            };\r\n\r\n        case \"SET_EMPLOYEE_LAST_NAME\":\r\n            return {\r\n                ...state,\r\n                lastName: action.payload\r\n            };\r\n\r\n        case \"SET_EMPLOYEE_EMAIL\":\r\n            return {\r\n                ...state,\r\n                email: action.payload\r\n            };\r\n\r\n        case \"SET_EMPLOYEE_PHONE\":\r\n            return {\r\n                ...state,\r\n                phoneNumber: action.payload\r\n            };\r\n\r\n        case \"SET_EMPLOYEE_HIRE_DATE\":\r\n            return {\r\n                ...state,\r\n                hireDate: action.payload\r\n            };\r\n\r\n        case \"SET_EMPLOYEE_SALARY\":\r\n            return {\r\n                ...state,\r\n                salary: action.payload\r\n            };\r\n\r\n        case \"SET_EMPLOYEE_JOB_ID\":\r\n            return {\r\n                ...state,\r\n                jobId: action.payload\r\n            };\r\n\r\n        case \"SET_EMPLOYEE_COMMISSION\":\r\n            return {\r\n                ...state,\r\n                commissionPct: action.payload\r\n            };\r\n\r\n        case \"SET_EMPLOYEE_MANAGER\":\r\n            return {\r\n                ...state,\r\n                managerId: action.payload\r\n            };\r\n\r\n        case \"SET_EMPLOYEE_DEPT\":\r\n            return {\r\n                ...state,\r\n                departmentId: action.payload\r\n            };\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nexport default newEmployeeReducer;","import {combineReducers} from \"redux\";\r\nimport { reducer as formReducer } from \"redux-form\";\r\nimport employeeReducer from \"./employeeReducer\";\r\nimport jobIdReducer from \"./jobIdReducer\";\r\nimport newEmployeeReducer from \"./newEmployeeReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    form: formReducer,\r\n    empReducer: employeeReducer,\r\n    jobIdReducer,\r\n    newEmployeeReducer\r\n});\r\n\r\nexport default rootReducer;","import rootReducer from \"./reducers/rootReducer\";\r\nimport thunk from 'redux-thunk';\r\nimport {applyMiddleware} from 'redux';\r\nimport {createStore} from \"redux\";\r\nimport {composeWithDevTools} from 'redux-devtools-extension';\r\n\r\nconst store = createStore(rootReducer, composeWithDevTools( applyMiddleware(thunk) ));\r\n\r\nexport default store;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport {Provider} from 'react-redux';\r\nimport store from './store';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}